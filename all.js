jQuery.fx.interval = 60;initTurnirs = false;window.requestAnimFrame = (function(){    return  window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||     function(/* function */ callback, /* DOMElement */ element){        window.setTimeout(callback, 40);    };})();window.cancelAnimFrame = (function(){    return  window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||window.msCancelAnimationFrame||     function(){};})();function toggleFullScreen() {  if (!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement) {     if (document.body.requestFullscreen) {      document.body.requestFullscreen(Element.ALLOW_KEYBOARD_INPUT);    } else if (document.body.mozRequestFullScreen) {      document.body.mozRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);    } else if (document.body.webkitRequestFullscreen) {      document.body.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);    }	if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){		$('body').css('transform','scale('+((screen.height < screen.width) ? screen.height/600 : screen.width/700)+')');	}  } else {    if (document.cancelFullScreen) {      document.cancelFullScreen();    } else if (document.mozCancelFullScreen) {      document.mozCancelFullScreen();    } else if (document.webkitCancelFullScreen) {      document.webkitCancelFullScreen();    }	$('body').css('transform','scale(1)');  }}function onfullscreenchange(e){	if(!document.fullscreenElement && !document.mozFullScreenElement && !document.webkitFullscreenElement){$('body').css('transform','scale(1)');};}document.documentElement.addEventListener("webkitfullscreenchange", onfullscreenchange);document.documentElement.addEventListener("mozfullscreenchange", onfullscreenchange);document.documentElement.addEventListener("fullscreenchange", onfullscreenchange);armessages = {};function wall(id, msg, typeMsg){	message();	VK.api('photos.getWallUploadServer', {https: 1}, function (data) {		$.post('upload.php', {'uploadUrl': data.response.upload_url, type: ((typeMsg >= 0) ? typeMsg : 'plane')}, function(data) {			var upload = $.parseJSON(data);			VK.api('photos.saveWallPhoto', {'hash': upload.hash, 'photo': upload.photo, 'server': upload.server, 'uid': id, 'gid': '', https: 1}, function (data) {				if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};				VK.api('wall.post', {'message': msg, attachments: data.response[0].id, https: 1}, function(data){									})			})		});	});}function wallF(fids,wallFriends,friendId){	VK.api('friends.get', {fields: 'photo_50', https: 1}, function(response){		for(var i = 0; i < response.response.length; i++){			if(fids.indexOf(response.response[i].uid) >= 0 || wallFriends.indexOf(response.response[i].uid) >= 0){				response.response[i] = 0; 			}		}		friendId = []; 		for(var i = 0; i < response.response.length; i++){			if(response.response[i] != 0) friendId.push(response.response[i]);		}		if(friendId.length >= 1){									friendId = friendId[Math.round(Math.random()*(friendId.length-1))];		}		else{			friendId = null;		}		if(friendId){			$('#turn .inviteFriend').remove();			$('#turn').append('<tr class = "inviteFriend"><td class = "foto"><img src = "'+friendId.photo_50+'"></img></td><td><span class = "name">'+friendId.first_name+'</span><br/>Ещё не<br/>играет</td><td><div class = "button" id = "inviteTurn">Пригласить</div></td></tr>');			$('#inviteTurn').click(function(){				$('#turn .inviteFriend').remove();				if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};				VK.api('wall.post', {message: 'Тут такое месево! Давай присоединяйся =) http://vk.com/aviamyaso_online', https: 1, owner_id: friendId.uid}, function(data){});				wallFriends.push(friendId.uid);				$.cookie('wallFriends', wallFriends.join(','), {expires: 3});				wallF(fids,wallFriends,friendId);			});		}	});	/*VK.api('friends.getOnline', {https: 1, count: 1, order: 'random'}, function(response2){		console.log(response2.response[0]);		VK.api('users.get', {https: 1, user_ids: response2.response[0], fields: 'photo_50'}, function(response){		$('#turn').append('<tr class = "inviteFriend"><td class = "foto"><img src = "'+response.response[0].photo_50+'"></img></td><td><span class = "name">'+response.response[0].first_name+'</span><br/>Не в<br/>игре</td><td><div class = "button" id = "inviteTurn">Позвать</div></td>');		$('#inviteTurn').click(function(){			$('#turn .inviteFriend').remove();			VK.callMethod('showRequestBox', response.response[0].uid, 'Давай сюда! Постреляемся =)', 1);			wallF();		});		});	});*/}function getWidth(cur,max,maxw){	var parr = [Math.round(maxw*((cur+(max/10)*cur)/((max/10)*cur+3))), Math.round(cur*10)+(max >= 0?'+':'')+Math.round(max*10)+'%'];	return parr;}function fillQuests(cur){	var quests = [10,50,100,500,1000,10,50,100,500,1000,1,18,500,1,10000,100000,5];	for(var i = 0; i < cur.length; i++){		$('#content .medails .q'+(i+1)).html(((cur[i] >= quests[i]) ? quests[i] : cur[i])+'/'+quests[i]);		$('#content .medails .qq'+(i+1)).css('opacity', cur[i]/quests[i]);	}	i = null; delete i;}function message(type, message, b1, b2){	if(type){		document.getElementById('shadow').style.display = 'block';		document.getElementById('ruletka').style.display = 'none';		$('.message').css('display', 'none');		$('.message *').unbind('click');		$('#ruletka *').unbind('click');		$(document).unbind('keyup');		switch(type){			case 'preloader':				$('#preloader p').html(message);				$('#preloader').css({display: 'block', top: (600-$('#preloader').outerHeight())/2});			break;			case 'one':				$('#one p').html(message);				$('#one .but').html(b1);				$('#one').css({display: 'block', top: (600-$('#one').outerHeight())/2});			break;			case 'two':				$('#two p').html(message);				$('#two .but1').html(b1);				$('#two .but2').html(b2);				$('#two').css({display: 'block', top: (600-$('#two').outerHeight())/2});			break;			case 'rul':				document.getElementById('ruletka').style.display = 'block';			break;		}	}	else{		document.getElementById('shadow').style.display = 'none';		$('.message *').unbind('click');		$('.message').css('display', 'none');		document.getElementById('ruletka').style.display = 'none';		$('#ruletka *').unbind('click');		$(document).unbind('keyup');	}}function top30(ids, rating, type){ 	/*var table = [];	VK.api('users.get', {'user_ids': ids.join(','), https: 1, fields: 'photo_100'}, function(response){		for(var i = 0; i < response.response.length; i++){			if(response.response[i].first_name.length > 11){				response.response[i].first_name = response.response[i].first_name.substr(0,8)+'...';			}			table.push([response.response[i].first_name, rating[i], response.response[i].photo_100, ids[i]]);		}		table.sort(function(a,b){return b[1]-a[1]});		if(type){			for(i = 0; i < table.length; i++){				$('#content .ratings .c1 > div.top30').append('<div class = "el">'+table[i][0]+'<br/><a href = "https://vk.com/id'+table[i][3]+'" target = "_blank"><img src = "'+table[i][2]+'"></img></a><br/><div class = "imaRating"></div>'+table[i][1]+'</div>');			}			$('.top30').mCustomScrollbar({advanced:{updateOnContentResize: true}});		}		else{			for(i = 0; i < table.length; i++){				$('#content .ratings .c1 > div.fids').append('<div class = "el">'+table[i][0]+'<br/><a href = "https://vk.com/id'+table[i][3]+'" target = "_blank"><img src = "'+table[i][2]+'"></img></a><br/><div class = "imaRating"></div>'+table[i][1]+'</div>');			}			VK.api('friends.get', {fields: 'photo_50', https: 1, count: 25, order: 'random'}, function(response){				$('#content .ratings .c1 > div.fids').append('<div class = "el" id = "inviteFriends"><b>Пригласить</b></div>');				for(var i = 0; i < 25; i++){					if(!response.response[i]){						$('#inviteFriends').append('<img src = "images/deactivated.gif"></img>');					}					else{						$('#inviteFriends').append('<img src = "'+response.response[i].photo_50+'"></img>');					}				}				$('#inviteFriends').append('<b>друзей</b>');				$('#inviteFriends').click(function(){if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};VK.callMethod('showInviteBox');});				$('.fids').mCustomScrollbar({advanced:{updateOnContentResize: true}});			});					}				table = null; delete table;		i = null; delete i;	}); */}function mesQ(id, types, dayBonus, firstEnter){	if(firstEnter){		message('one','Привет, пилот! Вижу, что ты первый раз зашёл в игру. Перед тем, как ты захочешь сразиться с живым соперником, рекомендую пройти начальное лётное обучение. Для этого кликни по кнопке "Начать бой!" напротив Искусственного интеллекта 0 уровня.','ОК');		$('#one .but, #one .close').click(function(){message()});	}	else if(weapons.messages.length >= 1){		message('one', weapons.messages[0], ((dayBonus > 0) ? 'Забрать бонус' : 'Рассказать друзьям'));		$('#one .but').click(function(){			if(!dayBonus) wall(id, weapons.wallMessages[types[0]], types[0]);			weapons.messages.splice(0,1);			if(!dayBonus) types.splice(0,1);			mesQ(id, types);		});		$('#one .close').click(function(){			weapons.messages.splice(0,1);			if(!dayBonus) types.splice(0,1);			mesQ(id, types);		});	}	else message();}function clone(obj){    if(!obj || typeof obj !== 'object'){        return obj;    }       var c = (typeof obj.pop === 'function') ? [] : {};    var p, v;        for(p in obj){        if(obj.hasOwnProperty(p)){            v = obj[p];            if(v && typeof v === 'object'){                c[p] = clone(v);            }            else{                c[p] = v;            }        }    }       return c;}function chislen(number, titles){	/*c += '';	if(c[c.length-1] == 1){return c+w[0]}	else if(c[c.length-1] > 1 && c[c.length-1] < 5){return c+w[1]}	else{return c+w[2]}*/	var cases = [2, 0, 1, 1, 1, 2];      return number+titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  }function setTurnirs(type){	$('.setTurnir').css('display', type == 'rating' || (turnir.w7 == 1 && type == 'win7') || (turnir.w30 == 1 && type == 'win30') ? 'none' : 'block');	$('.ratings .per span').html(turnir[type].period);	$('.ratings .pri span').html(turnir[type].price);	$('.ratings .ove span').html(turnir[type].timeEnd);	$('.ratings .rel span').html('через '+chislen(turnir.update, [' минуту',' минуты',' минут']));	$('.ratings .col').html(turnir[type].col);	$('.ratings .turnirName').html(turnir[type].name);	for(var i = 0; i < 4; i++){		for(var j = 0; j < 5; j++){			$('.ratings .'+turnir.sel[j]+(i+1)+' span').html(turnir[type].win[i][j]);		}	}	$('.ratings .list').empty();	$('.ratings .list').html(turnir[type].html);}turnir = {	update: 0,	turnirs: ['rating', 'win7', 'win30'],	sel: ['stars','metall','silicon','trotill','diamonds'],	rating: {col: 'Рейтинг', name: 'Общий рейтинг игроков', period: '1 неделя', price: 'бесплатно', timeEnd: '1 день 0 часов', reload: 'Каждые 20 минут', win: [[30,20,20,20,10],[25,15,15,15,7],[10,5,5,5,3],[5,3,3,3,1]], players: []},	win7: {col: 'Победы', name: 'Турнир побед за неделю', period: '1 неделя', price: '10 звёзд', timeEnd: '1 день 0 часов', reload: 'Каждые 20 минут', win: [[50,30,30,30,15],[40,25,25,25,10],[15,10,10,10,5],[10,7,7,7,3]], players: []},	win30: {col: 'Победы', name: 'Турнир побед за месяц', period: '30 дней', price: '50 звёзд', timeEnd: '1 день 0 часов', reload: 'Каждые 20 минут', win: [[200,70,70,70,50],[100,50,50,50,30],[50,30,30,30,15],[20,10,10,10,7]], players: []}}setInterval(function(){	turnir.update -= 1; if(turnir.update <= 0) turnir.update = 0;	$('.ratings .rel span').html('через '+chislen(turnir.update, [' минуту',' минуты',' минут']));}, 60000);for(var i = 0; i < 100; i++){	turnir.win30.players.push({name: 'имя'+i, count: 1000-i});}var maxParam = {	speed: 3,	radius: 3,	suspension: 3,	damage: 3,	rate: 3,	defaultPlane: 1,	speedPlane: 1,	radiusPlane: 1,	suspensionPlane: 1,	damagePlane: 1,	nyancatPlane: 1,	A: 999, B: 999, C: 999, D: 999, E: 999, F: 999, G: 999, H: 999, I: 999, J: 999, K: 999, L: 999, M: 999, N: 999, O: 999, P: 999}var weapons = {	messages: [],	wallMessages: ['Я сыграл уже 10 игр и получил в награду 5 осколочных ракет и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я сыграл уже 50 игр и получил в награду 50 осколочных ракет, 50 ударных ракет и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я сыграл уже 100 игр и получил в награду 10 алмазов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я сыграл уже 500 игр и получил в награду 30 металла, 30 кремния, 30 тротилла, 15 алмазов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я сыграл уже 1000 игр и получил в награду 100 звёзд, 50 алмазов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я победил уже 10 раз и получил медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я победил уже 50 раз и получил медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я победил уже 100 раз и получил медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я победил уже 500 раз и получил медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я победил уже 1000 раз и получил медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я добил соперника пулемётом и получил в награду 100 патронов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я купил все самолёты и получил в награду 100 алмазов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я наворовал 500 литров топлива и получил в награду 50 металла, 50 кремния, 50 тротилла, 30 алмазов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я победил с 1 жизнью и получил в награду 20 щитов, 20 аптечек и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я набрал 10 000 рейтинга и получил в награду 10 алмазов и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я набрал 100 000 рейтинга и получил в награду 40 металла, 40 кремния, 40 тротилла, 100 звёзд и медаль в игре Авиамясо! http://vk.com/aviamyaso_online',	'Я играл 5 дней подряд и получил медаль в игре Авиамясо! http://vk.com/aviamyaso_online'],	menu: {war: 22, planes: 92, shop: 174, medails: 251, ratings: 326, bank: 393, help: 453},	weapons: ['A','B','C','D','E','F','G','H'],	//чтобы небыло weapons.weapons.indexOf 	weaponsNI: {A:true,B:true,C:true,D:true,E:true,F:true,G:true,H:true},	bonuses: ['I','J','K','L','M','N','O','P'],	//чтобы небыло weapons.bonuses.indexOf 	bonusesNI: {I:true,J:true,K:true,L:true,M:true,N:true,O:true,P:true},	paramsName: {speed: ' скорости ', radius: ' маневренности ', suspension: ' защиты ', damage: ' мощности оружия ', rate: ' скорострельности '},	all: ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P'],	planes: {'default0':0,'speed0':1,'radius0':2,'suspension0':3,'damage0':4,'nyancat0':5,	'default1':6,'speed1':7,'radius1':8,'suspension1':9,'damage1':10,'nyancat1':11,	'default2':12,'speed2':13,'radius2':14,'suspension2':15,'damage2':16,'nyancat2':17},	planesArr: ['default0','speed0','radius0','suspension0','damage0','nyancat0',	'default1','speed1','radius1','suspension1','damage1','nyancat1',	'default2','speed2','radius2','suspension2','damage2','nyancat2'],	plan0: {default:0,speed:1,radius:2,suspension:3,damage:4,nyancat:5},	keySet: ["none",,,,,,,,"backspace","Tab",,,,"Enter",,,"Shift","Ctrl","Alt","Pause","CapsLock",,,,,,,"Esc",,,,,"Пробел","PageUp","PageDown","End","Home","&#8592;","&#8593;", "&#8594;","&#8595;",,,,,"Insert","Delete",,"0","1","2","3","4","5","6","7","8","9",,,,,,,,"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W", "X","Y","Z","Left Win","Right Win","App",,,"Num 0","Num 1","Num 2","Num 3","Num 4","Num 5","Num 6","Num 7","Num 8","Num 9","Num *","Num +",,"Num -","Num .","Num /","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12",,,,,,,,,,,,,,,,,,,,,"NumLock","ScrollLock",,,,,,,,,"PrintScreen",,,"Meta",,,,,,,,,,,,,,,,,,,,,,,,,,,,,";","=",",","-",".","/","~",,,,,,,,,,,,,,,,,,,,,,,,,,,"[","\\","]","\'"],	keysNames: ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','up','down'],	A: {WLprice: [[0,0,0,0],[5,5,5,5],[7,7,7,5]], index: 0, hot: 1, complect: 300, damage: ['0.3-1','0.4-1.1','0.5-1.2'], radius: [1,1.5,2], speed: [11,13,15], rate: [0.1,0.1,0.1], rating: 100, name: 'Пулемёт', about: '<p>Пулемёт - оружие "быстрого огня". Скорость стрельбы очень высокая, пуля летит достаточно быстро, но точность и убойность оставляют желать лучшего. Больше всего подходит для "добивания" соперника. При попадании не оказывает никакого дополнительного воздействия на самолёт.<br/><b>Пулемёт доступен на всех самолётах</b></p>', buy: 'Купить 300 патронов за 1 звезду', maxCount: 999},	B: {WLprice: [[0,0,0,0],[6,6,6,5],[8,8,8,6]], index: 1, hot: 2, complect: 50, damage: ['2-4','3-4','4-5'], radius: [6,7,9], speed: [8,9,10], rate: [1,0.8,0.7], rating: 500, name: 'Лёгкая ракета', about: '<p>Лёгкая ракета - основной вид оружия. Скорость стрельбы ниже чем у пулемёта, но точность и убойность в несколько раз выше. Подходит для любой ситуации. При попадании происходит небольшой взрыв, на долю секунды ослепляющий игроков.<br/><b>Лёгкая ракета доступна на всех самолётах</b></p>', buy: 'Купить 50 ракет за 1 звезду', maxCount: 999},	C: {WLprice: [[0,0,0,0],[7,7,7,5],[9,9,9,7]], index: 2, hot: 3, complect: 30, damage: ['4-6','5-6','6-7'], radius: [10,11,12], speed: [7,8,9], rate: [2,1.8,1.5], rating: 700, name: 'Ударная ракета', about: '<p>Ударная ракета - одна из специализированных ракет арсенала. Урон и точность на высоком уровне. При попадании в соперника разворачивает его самолёт мощной взрывной волной. Сила разворота зависит от нанесённого ракетой урона.<br/><b>Ударная ракета доступна на всех самолётах</b></p>', buy: 'Купить 30 ракет за 1 звезду', maxCount: 999},	D: {WLprice: [[0,0,0,0],[8,8,8,6],[10,10,10,8]], index: 3, hot: 5, complect: 20, damage: ['2-8','4-9','6-10'], radius: [10,10,11], speed: [6,7,8], rate: [3,2.7,2.5], rating: 1000, name: 'Осколочная ракета', about: '<p>Осколочная ракета - самая эффективная ракета своего класса. Нанесённый урон иногда может обеспечить пол победы. При попадании в соперника происходит большой взрыв с осколками, безопасными для стреляющего.<br/><b>Осколочная ракета доступна на всех самолётах</b></p>', buy: 'Купить 20 ракет за 1 звезду', maxCount: 999},	E: {WLprice: [[0,0,0,0],[10,10,10,10],[20,20,20,20]], index: 4, hot: 7, complect: 10, damage: ['10-15','11-16','12-17'], radius: [10,11,12], speed: [7,8,9], rate: [7,6,5], rating: 5000, name: 'Электро-ракета', about: '<p>Электро-ракета - оружие специального назначения. Дорогая в изготовлении, по-этому приобретается небольшими партиями. При попадании вызывает сильный электрический разряд, и соперник полностью теряет управление на некоторое время.<br/><b>Электро-ракета доступна только на скоростном и захваченном самолёте</b></p>', buy: 'Купить 10 ракет за 1 звезду', maxCount: 999},	F: {WLprice: [[0,0,0,0],[10,10,10,10],[20,20,20,20]], index: 5, hot: 7, complect: 10, damage: ['5-10','6-11','7-12'], radius: [30,31,32], speed: [8,9,10], rate: [7,6,5], rating: 5000, name: 'Слеповая ракета', about: '<p>Слеповая ракета - опасная штука. Процент попадания очень велик, скорость полёта ракеты как у обычной пули из пулемёта. При попадании ослепляет соперника на несколько секунд. Время ослепления зависит от нанесённого урона.<br/><b>Слеповая ракета доступна только на манёвренном и захваченном самолёте</b></p>', buy: 'Купить 10 ракет за 1 звезду', maxCount: 999},	G: {WLprice: [[0,0,0,0],[10,10,10,10],[20,20,20,20]], index: 6, hot: 7, complect: 10, damage: ['8-13','9-14','10-15'], radius: [1,2,3], speed: [25,26,27], rate: [7,6,5], rating: 5000, name: 'Быстрая ракета', about: '<p>Быстрая ракета - самая быстрая ракета из всех. Процент попадания низкий из-за применения на дальних расстояниях. Долетает до соперника почти мгновенно, нанося при этом существенный урон. Идеальна для стрельбы по дальним целям.<br/><b>Быстрая ракета доступна только на броневом и захваченном самолёте</b></p>', buy: 'Купить 10 ракет за 1 звезду', maxCount: 999},	H: {WLprice: [[0,0,0,0],[10,10,10,10],[20,20,20,20]], index: 7, hot: 7, complect: 10, damage: ['10-15','11-16','12-17'], radius: [35,36,37], speed: [7,8,9], rate: [7,6,5], rating: 5000, name: 'Точная ракета', about: '<p>Точная ракета - самая высокотехнологичная разработка. За счёт подвижного шасси запуска, ракета сама наводится в сторону соперника и стреляет в его сторону, независимо от того, куда летишь ты. Очень пригодится в сложных ситуациях.<br/><b>Точная ракета доступна только на боевом и захваченном самолёте</b></p>', buy: 'Купить 10 ракет за 1 звезду', maxCount: 999},	I: {index: 8, hot: 0, complect: 5, rate: 0, rating: 1500, name: 'Аптечка', about: '<p>Аптечка восстанавливает 10 жизней прямо во время боя. Рекомендуется использовать когда количество жизней уже меньше 25.<br/><b>Аптечкой можно пользоваться на всех самолётах.</b></p>', buy: 'Купить 5 аптечек за 1 звезду', maxCount: 999},	J: {index: 9, hot: 0, complect: 5, rate: 7, rating: 2000, name: 'Защита', about: '<p>Защитное поле в течении некоторого времени увеличивает показатель защиты твоего самолёта на 20 пунктов.<br/><b>Защитное поле можно включать на всех самолётах.</b></p>', buy: 'Купить 5 щитов за 1 звезду', maxCount: 999},	K: {index: 10, hot: 0, complect: 5, rate: 20, rating: 1500, name: 'Прицел', about: '<p>Включение лазерного луча. Помогает попасть в соперника с большого расстояния.<br/><b>Прицел работает на всех самолётах.</b></p>', buy: 'Купить 5 прицелов за 1 звезду', maxCount: 999},	L: {index: 11, hot: 0, complect: 5, rate: 0, rating: 2000, name: 'Телепорт', about: '<p>При активации твой самолёт телепортируется в начальную точку - место, откуда ты начинал полёт.<br/><b>Телепорт есть у каждого самолёта.</b></p>', buy: 'Купить 5 телепортов за 1 звезду', maxCount: 999},	M: {index: 12, hot: 0, complect: 3, rate: 10, rating: 10000, name: 'Невидимость', about: '<p>На небольшой промежуток времени делает твой самолёт невидимым для соперника. Однако он увидит, откуда летят ракеты.<br/><b>Генератор невидимости можно включить только на скоростном и захваченном самолёте.</b></p>', buy: 'Купить 3 невидимости за 1 звезду', maxCount: 999},	N: {index: 13, hot: 0, complect: 3, rate: 10, rating: 10000, name: 'Отражатель', about: '<p>На небольшое время активируется поглощающе-отражающее поле, и половину урона который получаешь ты, получает и соперник.<br/><b>Отражатель можно включить только на манёвренном и захваченном самолёте.</b></p>', buy: 'Купить 3 отражателя за 1 звезду', maxCount: 999},	O: {index: 14, hot: 0, complect: 3, rate: 10, rating: 10000, name: 'Антинаведение', about: '<p>Активируется радиоизлучение, сбивающее все приборы соперника, из за чего ему будет сложнее попасть в тебя.<br/><b>Антинаведение активируетсятолько на броневом и захваченном самолёте.</b></p>', buy: 'Купить 3 антинаведения за 1 звезду', maxCount: 999},	P: {index: 15, hot: 0, complect: 3, rate: 10, rating: 10000, name: 'Быстрая перезарядка', about: '<p>При включении некоторое время перезарядка всего оружия длится 1 секунду. (Будьте внимательны! Пулемет будет перезаряжаться тоже 1 секунду!)<br/><b>Быстрая перезарядка возможна только на боевом и захваченном самолёте.</b></p>', buy: 'Купить 3 перезарядки за 1 звезду', maxCount: 999},	default: [		{speed: 0, radius: 0, suspension: 0, damage: 0, rate: 0, rating: 0, price: 0, name: 'Самолёт курсанта', weapons: ['A','B','C','D'], bonuses: ['I','J','K','L'], resources: [0,0,0,0], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true}, bonusesNI: {I:true,J:true,K:true,L:true}},		{speed: -1, radius: 2, suspension: -1, damage: 2, rate: -1, rating: 0, price: 0, name: 'Самолёт курсанта', weapons: ['A','B','C','D'], bonuses: ['I','J','K','L'], resources: [0,0,0,0], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true}, bonusesNI: {I:true,J:true,K:true,L:true}},		{speed: 2, radius: -1, suspension: 2, damage: -1, rate: -1, rating: 0, price: 0, name: 'Самолёт курсанта', weapons: ['A','B','C','D'], bonuses: ['I','J','K','L'], resources: [0,0,0,0], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true}, bonusesNI: {I:true,J:true,K:true,L:true}}	],	speed: [		{speed: 1.5, radius: 0, suspension: 0, damage: 0, rate: 0, rating: 5000, price: 100, name: 'Скоростной самолёт', weapons: ['A','B','C','D','E'], bonuses: ['I','J','K','L','M'], resources: [10,10,10,3], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true,E:true}, bonusesNI: {I:true,J:true,K:true,L:true,M:true}},		{speed: 3.5, radius: 1, suspension: 1, damage: 1, rate: 1, rating: 7000, price: 500, name: 'Скоростной самолёт', weapons: ['A','B','C','D','E','H'], bonuses: ['I','J','K','L','M'], resources: [100,100,100,30], tehno: [3,3,3,3,3],weaponsNI: {A:true,B:true,C:true,D:true,E:true,H:true}, bonusesNI: {I:true,J:true,K:true,L:true,M:true}},		{speed: 5, radius: 2, suspension: 2, damage: 2, rate: 2, rating: 12000, price: 1000, name: 'Скоростной самолёт', weapons: ['A','B','C','D','E','H'], bonuses: ['I','J','K','L','M','P'], resources: [300,300,300,100], tehno: [7,7,7,7,7],weaponsNI: {A:true,B:true,C:true,D:true,E:true,H:true}, bonusesNI: {I:true,J:true,K:true,L:true,M:true,P:true}}	],	radius: [		{speed: 0, radius: 1.5, suspension: 0, damage: 0, rate: 0, rating: 5000, price: 100, name: 'Манёвренный самолёт', weapons: ['A','B','C','D','F'], bonuses: ['I','J','K','L','N'], resources: [10,10,10,3], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true,F:true}, bonusesNI: {I:true,J:true,K:true,L:true,N:true}},		{speed: 1, radius: 3.5, suspension: 1, damage: 1, rate: 1, rating: 7000, price: 500, name: 'Манёвренный самолёт', weapons: ['A','B','C','D','F','E'], bonuses: ['I','J','K','L','N'], resources: [100,100,100,30], tehno: [3,3,3,3,3],weaponsNI: {A:true,B:true,C:true,D:true,F:true,E:true}, bonusesNI: {I:true,J:true,K:true,L:true,N:true}},		{speed: 2, radius: 5, suspension: 2, damage: 2, rate: 2, rating: 12000, price: 1000, name: 'Манёвренный самолёт', weapons: ['A','B','C','D','F','E'], bonuses: ['I','J','K','L','N','M'], resources: [300,300,300,100], tehno: [7,7,7,7,7],weaponsNI: {A:true,B:true,C:true,D:true,F:true,E:true}, bonusesNI: {I:true,J:true,K:true,L:true,N:true,M:true}}	],	suspension: [		{speed: 0, radius: 0, suspension: 1.5, damage: 0, rate: 0, rating: 5000, price: 100, name: 'Броневой самолёт', weapons: ['A','B','C','D','G'], bonuses: ['I','J','K','L','O'], resources: [10,10,10,3], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true,G:true}, bonusesNI: {I:true,J:true,K:true,L:true,O:true}},		{speed: 1, radius: 1, suspension: 3.5, damage: 1, rate: 1, rating: 7000, price: 500, name: 'Броневой самолёт', weapons: ['A','B','C','D','G','F'], bonuses: ['I','J','K','L','O'], resources: [100,100,100,30], tehno: [3,3,3,3,3],weaponsNI: {A:true,B:true,C:true,D:true,G:true,F:true}, bonusesNI: {I:true,J:true,K:true,L:true,O:true}},		{speed: 2, radius: 2, suspension: 5, damage: 2, rate: 2, rating: 12000, price: 1000, name: 'Броневой самолёт', weapons: ['A','B','C','D','G','F'], bonuses: ['I','J','K','L','O','N'], resources: [300,300,300,100], tehno: [7,7,7,7,7],weaponsNI: {A:true,B:true,C:true,D:true,G:true,F:true}, bonusesNI: {I:true,J:true,K:true,L:true,O:true,N:true}}	],	damage: [		{speed: 0, radius: 0, suspension: 0, damage: 1.5, rate: 0, rating: 5000, price: 100, name: 'Боевой самолёт', weapons: ['A','B','C','D','H'], bonuses: ['I','J','K','L','P'], resources: [10,10,10,3], tehno: [1,1,1,1,1],weaponsNI: {A:true,B:true,C:true,D:true,H:true}, bonusesNI: {I:true,J:true,K:true,L:true,P:true}},		{speed: 1, radius: 1, suspension: 1, damage: 3.5, rate: 1, rating: 7000, price: 500, name: 'Боевой самолёт', weapons: ['A','B','C','D','H','G'], bonuses: ['I','J','K','L','P'], resources: [100,100,100,30], tehno: [3,3,3,3,3],weaponsNI: {A:true,B:true,C:true,D:true,H:true,G:true}, bonusesNI: {I:true,J:true,K:true,L:true,P:true}},		{speed: 2, radius: 2, suspension: 2, damage: 5, rate: 2, rating: 12000, price: 1000, name: 'Боевой самолёт', weapons: ['A','B','C','D','H','G'], bonuses: ['I','J','K','L','P','O'], resources: [300,300,300,100], tehno: [7,7,7,7,7],weaponsNI: {A:true,B:true,C:true,D:true,H:true,G:true}, bonusesNI: {I:true,J:true,K:true,L:true,P:true,O:true}}	],	nyancat: [		{speed: 1, radius: 1, suspension: 1, damage: 1, rate: 1, rating: 7000, price: 500, name: 'Захваченный самолёт', weapons: ['A','B','C','D','E','F','G','H'], bonuses: ['I','J','K','L','M','N','O','P'], resources: [100,100,100,30], tehno: [5,5,5,5,5],weaponsNI: {A:true,B:true,C:true,D:true,E:true,F:true,G:true,H:true}, bonusesNI: {I:true,J:true,K:true,L:true,M:true,N:true,O:true,P:true}},		{speed: 2.5, radius: 2.5, suspension: 2.5, damage: 2.5, rate: 2.5, rating: 20000, price: 2000, name: 'Захваченный самолёт', weapons: ['A','B','C','D','E','F','G','H'], bonuses: ['I','J','K','L','M','N','O','P'], resources: [500,500,500,150], tehno: [7,7,7,7,7],weaponsNI: {A:true,B:true,C:true,D:true,E:true,F:true,G:true,H:true}, bonusesNI: {I:true,J:true,K:true,L:true,M:true,N:true,O:true,P:true}},		{speed: 4, radius: 4, suspension: 4, damage: 4, rate: 4, rating: 100000, price: 20000, name: 'Захваченный самолёт', weapons: ['A','B','C','D','E','F','G','H'], bonuses: ['I','J','K','L','M','N','O','P'], resources: [1000,1000,1000,300], tehno: [10,10,10,10,10],weaponsNI: {A:true,B:true,C:true,D:true,E:true,F:true,G:true,H:true}, bonusesNI: {I:true,J:true,K:true,L:true,M:true,N:true,O:true,P:true}}	],	learning: ['ТЫ СЕЙЧАС НАХОДИШЬСЯ^НА ТРЕНИРОВОЧНОЙ БАЗЕ.^ПОПРОБУЙ ПРОСТО ПОУПРАВЛЯТЬ^САМОЛЁТОМ ИСПОЛЬЗУЯ КЛАВИШИ^W (ВВЕРХ) И S (ВНИЗ)                              ','ПРИ ЖЕЛАНИИ ТЫ МОЖЕШЬ^ИЗМЕНИТЬ КЛАВИШИ УПРАВЛЕНИЯ^САМОЛЁТОМ В ГЛАВНОМ МЕНЮ ИГРЫ                              ','ОТЛИЧНО! НО НЕ ЗАБЫВАЙ, ЧТО^НЕЛЬЗЯ ЛЕТАТЬ СЛИШКОМ НИЗКО^- ТАК ТЫ РИСКУЕШЬ РАЗБИТЬСЯ ОБ ЗЕМЛЮ!                              ','ЧТОЖ, НАУЧИЛСЯ ЛЕТАТЬ^- ТЕПЕРЬ Я РАССКАЖУ ОБ ОРУЖИИ И БОНУСАХ                              ','КРУГИ СВЕРХУ - ЭТО БОНУСЫ.^ЗЕЛЁНАЯ ПОЛОСКА СВЕРХУ ОЗНАЧАЕТ^ДЛИТЕЛЬНОСТЬ ДЕЙСТВИЯ БОНУСА.^ПОКА БОНУС АКТИВЕН, ЕГО НЕЛЬЗЯ^ВКЛЮЧИТЬ ЕЩЁ РАЗ                              ','ПОЛОСКА СНИЗУ ОБОЗНАЧАЕТ^СКОЛЬКО БОНУСОВ ДАННОГО ТИПА^У ТЕБЯ ОСТАЛОСЬ                              ','ПОПРОБУЙ АКТИВИРОВАТЬ ЗАЩИТНОЕ^ПОЛЕ КЛИКНУВ ПО ЗНАЧКУ С ЩИТОМ                              ','КАК ВИДИШЬ, АКТИВИРОВАЛОСЬ^ЗАЩИТНОЕ ПОЛЕ, ДЕЙСТВИЕ КОТОРОГО^ЗАКОНЧИТСЯ КОГДА ЗЕЛЁНАЯ^ПОЛОСКА ЗАПОЛНИТСЯ                              ','ТЕПЕРЬ ОБ ОРУЖИИ.^ВСЁ ОРУЖИЕ НАХОДИТСЯ ВНИЗУ.^ЖЕЛТАЯ ПОЛОСА НАД КАЖДЫМ ЗНАЧКОМ^- ИНДИКАТОР ПЕРЕЗАРЯДКИ                              ','ОРАНЖЕВАЯ ПОЛОСКА - ОСТАВШЕЕСЯ ОРУЖИЕ.^ТАК ЖЕ РЯДОМ С КАЖДЫМ ОРУЖИЕМ^И БОНУСОМ НАПИСАНО КОНКРЕТНОЕ^ОСТАВШЕЕСЯ КОЛИЧЕСТВО                              ','СДЕЛАТЬ ВЫСТРЕЛ МОЖНО ДВУМЯ СПОСОБАМИ:^1 СПОСОБ - КЛИКНУТЬ ПО ЗНАЧКУ С ОРУЖИЕМ.^ПОПРОБУЙ ВЫСТРЕЛИТЬ ЛЮБЫМ ОРУЖИЕМ                              ',' ','2 СПОСОБ - МОЖНО КЛИКАТЬ МЫШКОЙ^В ЛЮБОМ МЕСТЕ ЭКРАНА.^В ЭТОМ СЛУЧАЕ ВЫБОР ОРУЖИЯ БУДЕТ^СДЕЛАН АВТОМАТИЧЕСКИ ИЗ 4 ОСНОВНЫХ^ВИДОВ ОРУЖИЯ.                              ','ПОПРОБУЙ СТРЕЛЯТЬ ЧАСТО НАЖИМАЯ НА ЭКРАН.^КАК ВИДИШЬ, ВЫСТРЕЛ ПРОИСХОДИТ^ОРУЖИЕМ, КОТОРОЕ ПЕРЕЗАРЯЖЕНО^И ЕСТЬ В НАЛИЧИИ.                              ','ОТЛИЧНО! ТЫ НАУЧИЛСЯ СТРЕЛЯТЬ^РАЗНЫМИ СПОСОБАМИ. КАКОЙ УДОБНЕЕ - РЕШАТЬ ТЕБЕ                              ','КАЖЕТСЯ, КТО-ТО ВТОРГСЯ^НА НАШУ УЧЕБНУЮ ТЕРРИТОРИЮ...                              ','К БОЮ ПИЛОТ!^УНИЧТОЖЬ СВОЕГО ПЕРВОГО ПРОТИВНИКА,^И ВОЗВРАЩАЙСЯ НА БАЗУ!                              '],	bgs: {_4: [-300,-550, 250], _3: [-10, -150, 140], _2: [-350, -450, 100]},	bots: function(l){		var levels = ['0 звёзд (тренировочный уровень, дальше - больше)','3 звезды','3 звезды','3 звезды','3 звезды','3 звезды','3 звезды','5 звёзд','5 звёзд','5 звёзд','5 звёзд','5 звёзд','5 звёзд','5 звёзд','8 звёзд','8 звёзд','8 звёзд','8 звёзд','8 звёзд','8 звёзд','8 звёзд','10 звёзд','10 звёзд','10 звёзд','10 звёзд','10 звёзд','13 звёзд','13 звёзд','13 звёзд','13 звёзд','13 звёзд'];		if(l <= 30) return levels[l];		else{			return chislen(Math.round(13+(l/10)), [' звезду', ' звезды', ' звёзд']);		}	},	rul_text: ['К сожалению, ты ничего не выиграл =(','+10% рейтинга к каждой победе на 24 часа','Скорость восстановления топлива х2 на 24 часа','Ты выиграл 10 звёзд!','+50% рейтинга к каждой победе на 24 часа','Ты выиграл 15 алмазов!','+20% рейтинга к каждой победе на 24 часа','Ты выиграл 15 тротилла!','Ты выиграл 3 звезды!','+40% рейтинга к каждой победе на 24 часа','Скорость восстановления топлива х5 на 24 часа','Ты выиграл 15 кремния!','Ты выиграл 5 звёзд!','+30% рейтинга к каждой победе на 24 часа','Ты выиграл 15 металла!','Ты выиграл 50 звёзд!','К сожалению, ты ничего не выиграл =('],	hacked: ['Основное оружие: ','Основные бонусы: ','Скорость: ','Управление: ','Защита: ','Мощность: ','Перезарядка: ','Специальное оружие: ','Специальные бонусы: ','Самолёт: ','Модификация самолёта: ','Уровень микропроцессоров: ','Уровень турбин: ','Уровень строительного материала: ','Уровень системы наведения: ','Уровень технологий ИИ: ',],	warMessages: {pop:true,hit:true,regenOpp:true,regen:true,bonusOk:true,bonusLoose:true,bonus:true,superSpeed:true,correct:true,shot:true}}var Avatar = function(init){	this.foto = init.foto;	this.name = init.name;	this.life = init.life;	this.plane = init.plane;	this.superSpeed = 0;	this.wSuperSpeed = 0;	this.superSpeedW = 200;	//this.superSpeedT = 0;	this.wspeed = 0;	this.wsuspension = 0;	this.wradius = 0;	this.wdamage = 0;	this.wrate = 0;	this.key = false;	this.fallen = false;	this.setLife = function(){		$('#lifeW').css({width:this.life*1.8});		$('#life .img').css({left:-20+this.life*1.8});	}	this.setSpeed = function(){		$('#superSpeedW').css({width:this.superSpeedW});		$('#superSpeed .img').css({left:-25+this.superSpeedW});	}	this.setHot = function(){		$('#hotW').css({width:this.hot*1.8});		$('#hot .img').css({left:-14+this.hot*1.8});	}	if(init.id){		this.id = init.id;		this.stars = init.stars;		this.rating = init.rating;		this.gas = init.gas;		this.quests = init.quests;		this.medails = init.medails;		this.activeWeapon = false;		this.activePlane = false;		this.activePlaneMk = 0;		this.hot = 0;		this.typeBuy = false;		this.item = false;		this.planes = init.planes;		this.planesTrue = [];		this.levelBot = init.levelBot;		this.curTurnir = 0;		this.win7 = init.onWin7;		this.win30 = init.onWin30;		for(var i = 0; i < 6; i++){			if(this.planes[i]) this.planesTrue.push(weapons.planesArr[i]);		}		this.per = {};		this.tper = {};		this.weapons = init.weapons;		this.wl = init.wl;		for(var i = 0; i < weapons.all.length; i++){			$('.weapons .'+weapons.all[i]+' .val span').html(this.weapons[weapons.all[i]]);			this.per[weapons.all[i]] = Date.now();		//время выстрела (наращивается с каждым кадром)			this.tper[weapons.all[i]] = Date.now();		//время окончания перезарядки		}		i = null; delete i;		this.keys = $.cookie('keys'); 		if(!this.keys){this.keys = [18,90,88,67,0,0,0,0,49,50,51,52,0,0,0,0,87,83]; $.cookie('keys', this.keys.join(','), {expires: 999})}		else{this.keys = this.keys.split(',');}		for(var i = 0; i < weapons.keysNames.length; i++){			$('#control .'+weapons.keysNames[i]).html(weapons.keySet[this.keys[i]]);		}		for(var i = 0; i < this.keys.length; i++){			this.keys[i] -= 0;		}		this.debaff = {			M: {per: 1, tper: 1},			E: {per: 1, tper: 1}		};		this.wallFriends = $.cookie('wallFriends');		this.fids = init.fids.split(',');		for(var i = 0; i < this.fids.length; i++){			this.fids[i] -= 0;		}		if(!this.wallFriends){			$.cookie('wallFriends', '', {expires: 999})			this.wallFriends = [];		}		else this.wallFriends = this.wallFriends.split(',');		this.speed = init.speed;		this.radius = init.radius;		this.suspension = init.suspension;		this.damage = init.damage;		this.rate = init.rate;		this.prices = function(){			this.speedPrice = Math.ceil(((this.speed-1)*15)*this.speed*2) || 1;			this.speedRating = Math.ceil(((this.speed-1)*15)*this.speed*1000) || 1000;			this.radiusPrice = Math.ceil(((this.radius-1)*15)*this.radius*2) || 1;			this.radiusRating = Math.ceil(((this.radius-1)*15)*this.radius*1000) || 1000;			this.suspensionPrice = Math.ceil(((this.suspension-1)*15)*this.suspension*2) || 1;			this.suspensionRating = Math.ceil(((this.suspension-1)*15)*this.suspension*1000) || 1000;			this.damagePrice = Math.ceil(((this.damage-1)*15)*this.damage*2) || 1;			this.damageRating = Math.ceil(((this.damage-1)*15)*this.damage*1000) || 1000;			this.ratePrice = Math.ceil(((this.rate-1)*15)*this.rate*2) || 1;			this.rateRating = Math.ceil(((this.rate-1)*15)*this.rate*1000) || 1000;			$('#content .planes .speed .plus, #content .war .speed .plus').attr('title', (this.speed >= maxParam.speed) ? 'Параметр на максимуме !' : 'Увеличить<br/>Необходимо звёзд: '+this.speedPrice+'<br/>Необходимо рейтинга: '+this.speedRating).css('opacity', (this.rating < this.speedRating || this.stars < this.speedPrice || this.speed >= maxParam.speed) ? 0.4 : 1);			$('#content .planes .radius .plus, #content .war .radius .plus').attr('title', (this.radius >= maxParam.radius) ? 'Параметр на максимуме !' : 'Увеличить<br/>Необходимо звёзд: '+this.radiusPrice+'<br/>Необходимо рейтинга: '+this.radiusRating).css('opacity', (this.rating < this.radiusRating || this.stars < this.radiusPrice || this.radius >= maxParam.radius) ? 0.4 : 1);			$('#content .planes .suspension .plus, #content .war .suspension .plus').attr('title', (this.suspension >= maxParam.suspension) ? 'Параметр на максимуме !' : 'Увеличить<br/>Необходимо звёзд: '+this.suspensionPrice+'<br/>Необходимо рейтинга: '+this.suspensionRating).css('opacity', (this.rating < this.suspensionRating || this.stars < this.suspensionPrice || this.suspension >= maxParam.suspension) ? 0.4 : 1);			$('#content .planes .damage .plus, #content .war .damage .plus').attr('title', (this.damage >= maxParam.damage) ? 'Параметр на максимуме !' : 'Увеличить<br/>Необходимо звёзд: '+this.damagePrice+'<br/>Необходимо рейтинга: '+this.damageRating).css('opacity', (this.rating < this.damageRating || this.stars < this.damagePrice || this.damage >= maxParam.damage) ? 0.4 : 1);			$('#content .planes .rate .plus, #content .war .rate .plus').attr('title', (this.rate >= maxParam.rate) ? 'Параметр на максимуме !' : 'Увеличить<br/>Необходимо звёзд: '+this.ratePrice+'<br/>Необходимо рейтинга: '+this.rateRating).css('opacity', (this.rating < this.rateRating || this.stars < this.ratePrice || this.rate >= maxParam.rate) ? 0.4 : 1);		}		this.prices();		this.plane = 'default';		this.planeMk = 0;		this.planeNum = -1;		this.range = 0;				this.gameInterval = false;		this.gasInterval = false;		this.pingTimeout = false;		this.time1 = 0;		this.time2 = 0;		this.time3 = 0;			this.turn = false;		this.oppId = false;				this.resources = init.resources; //(металл, крмений, тротилл, алмазы)		this.setResources = function(r){			$('#metall span').html(r[0]);			$('#silicon span').html(r[1]);			$('#trotill span').html(r[2]);			$('#diamonds span').html(r[3]);		}		this.setResources(this.resources);		this.tehno = init.tehno; //усовершенствование микропроцессоров, усовершенствование турбин, облегчение строительного материала, улучшенная система наведения, технологии ИИ		this.setTehno = function(t,r,d,s){			for(var i = 0; i < 5; i++){				$('#teh'+i+' .level span').html(r[i]);				if(t!=i){					$('#teh'+i+' .tehnod').html(r[i]*r[i]*3).css('opacity', r[i]*r[i]*3 > d ? 0.4 : 1); $('#teh'+i+' .tehnos').html(r[i]*r[i]*10).css('opacity', r[i]*r[i]*10 > s ? 0.4 : 1);					$('#teh'+i+' .ttt').html(chislen(6+r[i]*6, [' час ',' часа ',' часов ']));					$('#teh'+i+' .s, #teh'+i+' .d, #teh'+i+' .tehnos, #teh'+i+' .tehnod').css('display', 'inline-block');					if(t==10) $('#teh'+i+' .buy').css('opacity', 1).html('Начать изучение технологии');					$('#teh'+i+' .sss').html('Время изучения: ');					}			}		}		//this.setTehno(this.tehno, this.resources[3], this.stars);		this.tehnoNum = init.tehnoTime[0]; //номер технологии которая изучается		this.tehnoTime = init.tehnoTime[1];		this.unixTime = init.unixTime;		this.setTehnoTime = function(tn,ttt,ut){			if(tn != 10){								var tt = [Math.floor((ttt-ut)/1000/60/60), Math.floor((ttt-ut)/1000/60)]; //1 - часов, 2 - минут				tt[1] -= tt[0]*60;				if(ttt - ut > 0){					$('.teh .buy').css('opacity', 0.2);					$('#teh'+tn+' .buy').css('opacity', 1).html('Ускорить процесс изучения');					$('#teh'+tn+' .s, #teh'+tn+' .d, #teh'+tn+' .tehnos, #teh'+tn+' .tehnod').css('display', 'none');					$('#teh'+tn+' .sss').html('До окончания процесса изучения осталось: ');									$('#teh'+tn+' .ttt').html(' '+chislen(tt[0], [' час ',' часа ',' часов '])+chislen(tt[1], [' минута',' минуты',' минут']));				}				else{					$('#teh'+tn+' .sss').html('До окончания процесса изучения осталось: ');					$('#teh'+tn+' .ttt').html('0 часов 0 минут');					return true;				}			}		};	}	this.game = function(par){		this.wspeed = par.wspeed;		this.wsuspension = par.wsuspension;		this.wradius = par.wradius;		this.wdamage = par.wdamage;		this.wrate = par.wrate;		this.plane = par.plane;		this.planeMk = par.planeMk;		this.timeK = 1;		this.foto = par.foto;		this.sideName = par.side;		this.regenTime = par.regenTime;		this.x = (par.side == 'left') ? 40 : 660;				this.y = 450;		this.w = 67;		this.h = 17;		this.koef = (par.side == 'left') ? 1 : -1;		this.key = false;		this.keyFlag = false;		this.s = this.wspeed;		this.r = this.s*50/this.wradius;		this.cosa = (this.r*this.r+this.r*this.r-this.s*this.s)/(2*this.r*this.r);		this.a = 0;		this.ra = this.a;		this.PI = Math.PI;		this.PI180 = this.PI/180;		/*this.image = new Image();		this.image.src = 'images/planes/'+((this.sideName == 'left')?'l':'r')+((this.id)?'g':'r')+weapons.plan0[this.plane]+this.planeMk+'.png';*/		this.image = document.createElement('canvas'); this.image.width = this.w; this.image.height = this.h;		this.imagectx = this.image.getContext('2d');		this.imagePng = new Image();		this.imagePng.src = 'images/planes/'+((this.sideName == 'left')?'l':'r')+((this.id)?'g':'r')+weapons.plan0[this.plane]+this.planeMk+'.png';		this.opacity = 1;		this.cam = 0;		this.camD = 0;		this.gameInterface = $('#cam');		this.rand = function(min,max){			return Math.random()*(max - min) + min;		};		this.camX = 0;		this.camY = 0;		this.shift = false;		//this.tehnoSettings = [1,2,5,1,1];		this.wSuperSpeed = par.wSuperSpeed;		this.superSpeedT = par.superSpeedT;		this.pinger = 30;		this.pingx = 0;		this.pingy = 0;		this.interpol = false;	}	this.draw = function(t,tr){		this.tr = tr;		this.x2 = this.x;		this.y2 = this.y;		this.s2 = this.s;		this.r2 = this.r;		this.cosa2 = this.cosa;		this.a2 = this.a;		this.ra2 = this.ra;		this.timeK = tr/40;		/*if(this.superSpeed > Date.now() && this.shift){			this.timeK += (this.wspeed+this.wSuperSpeed)/this.wspeed;			this.superSpeedW = 180*((this.superSpeed-Date.now())/this.superSpeedT);		}*/		if(this.shift && this.superSpeed >= 100){			if(this.id){				this.superSpeed -= tr/this.superSpeedT+10;			}			this.timeK += (this.wspeed+this.wSuperSpeed)/this.wspeed;		}		/*if(!this.id && this.interpol){			if(Math.abs(this.pingx-this.x) > 10 && Math.abs(this.pingy-this.y) > 10)				this.timeK += this.timeK/(this.pinger/tr)			else				this.interpol = false;		}*/this.t		this.x += this.timeK*this.koef*this.s*Math.sin((90-this.ra)*this.PI180); //*2 - занос жопы, летание по овалу а не по кругу		//if(isNaN(this.x)) this.x = this.x2+(2*(this.timeK*this.koef*this.s*Math.sin((90-this.ra)*this.PI180)));		this.y -= this.timeK*this.koef*this.s*Math.sin(this.ra*this.PI180);		//if(isNaN(this.y)) this.y = this.y2-(2*(this.timeK*this.koef*this.s*Math.sin(this.ra*this.PI180)));		this.s -= this.timeK*(this.koef*Math.sin(this.ra*this.PI180))*(this.wspeed/(this.y/this.wspeed))/4.5;		//if(isNaN(this.s)) this.s = this.s2-(2*(this.timeK*(this.koef*Math.sin(this.ra*this.PI180))*(this.wspeed/(this.y/this.wspeed))/4.5));		if(this.s <= 0) this.s = this.koef*0.0001;		//this.r = this.timeK*this.s*50/this.wradius; //угловая скорость		//if(isNaN(this.r)) this.r = this.r2;		//if(this.r == 0) this.r = this.koef*0.000000001;		//this.cosa = (this.r*this.r+this.r*this.r-this.s*this.s)/(2*this.r*this.r);		//if(isNaN(this.cosa)) this.cosa = this.cosa2;		//this.a = this.timeK*this.koef*Math.acos(this.cosa)*180/this.PI;		this.a = this.tr/40*this.koef*this.wradius*2.5;		//if(isNaN(this.a)) this.a = this.a2;		for(var i = 0; i < weapons.all.length; i++){			if(this.id && this.per[weapons.all[i]]-400 <= this.tper[weapons.all[i]]){				this.per[weapons.all[i]] += tr;		//время выстрела (наращивается с каждым кадром)			}		} 		if(this.id){			/*if(this.cam > 0){				this.cam -= this.camD;				this.camX -= (this.camX < 0 ? -0.5 : 0.5);				this.camY -= (this.camY < 0 ? -0.5 : 0.5);				this.gameInterface.css({top: this.camY, left: this.camX});			}			else if(this.camX != 0 && this.camY != 0){				this.camX = 0;				this.camY = 0;				this.gameInterface.css({top: 0, left: 0});			}*/			this.opacity = (this.per.M < this.tper.M) ? 0.6 : 1;			if(this.debaff.M.per != 1) this.debaff.M.per += tr;			if(this.debaff.E.per <= this.debaff.E.tper) this.debaff.E.per += tr;			if(this.superSpeed < 10000 && !this.shift){				this.superSpeed += tr;			}			else if(!this.shift){				this.superSpeed = 10000;			}			this.superSpeedW = 180*(this.superSpeed/10000);			if(this.hot <= 0) this.hot = 0			else this.hot -= 0.33*tr/40;			//console.log(this.tr);		}		//console.log(this.a.toFixed(5));		if(this.x > 700+this.w) this.x = -this.w;		if(this.x < -this.w) this.x = 700+this.w;		if(this.key == 'up') this.ra += this.a*this.timeK		else if(this.key == 'down') this.ra -= this.a*this.timeK;		if(isNaN(this.x) || isNaN(this.y) || isNaN(this.r) || isNaN(this.a) || isNaN(this.ra) || isNaN(this.s) || isNaN(this.cosa) || isNaN(this.timeK)){			this.x = (this.sideName == 'left') ? 40 : 660;					this.y = 450;			this.s = this.wspeed;			this.r = this.s*50/this.wradius;			this.cosa = (this.r*this.r+this.r*this.r-this.s*this.s)/(2*this.r*this.r);			this.a = 0;			this.ra = this.a;		}		if(this.opacity >= 0.5){			if(this.id){				this.setSpeed();				this.setHot();			}			ctx.globalAlpha = this.opacity;			ctx.save();			ctx.translate(this.x, this.y);			ctx.fillStyle = this.id ? '#0d0' : '#f00';			ctx.strokeStyle = '#000';			ctx.lineWidth = 1;			ctx.fillRect(-34,-40,(this.life/100)*67,4);			ctx.strokeRect(-34,-40,67,4);			ctx.rotate(-this.ra*this.PI/180);			ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);			ctx.restore();		}	}	this.getCorrect = function(key){		if(key){			return {type: 'correct', key: this.key, k: 1, shift: this.shift}		}		else{			//return {type: 'correct', relx: Math.abs(this.x2-this.x), rely: Math.abs(this.y2-this.y), rels: Math.abs(this.s2-this.s), x:this.x, y:this.y, s:this.s, r:this.r, cosa:this.cosa, a:this.a, key:this.key, k: 0};			var cadrs = this.pinger/this.tr;			var lcadrs;			var x = this.x; //х координата			var y = this.y; //у координата			var s = this.s; //скосроть			var key = this.key;			var a = this.a; //скосроть изменения угла, близко к 3.78, постоянная?			var ra = this.ra; //общий угол, изменяется постоянно на поворотах			/*a = this.tr/40*this.koef*this.wradius*2.5;			var i = 0;			if(cadrs>=1){				for(i; i < cadrs; i++){					x += this.timeK*this.koef*s*Math.sin((90-ra)*this.PI180);					y -= this.timeK*this.koef*s*Math.sin(ra*this.PI180);					s -= this.timeK*(this.koef*Math.sin(ra*this.PI180))*(this.wspeed/(y/this.wspeed))/4.5;					if(key == 'up') ra += a					else if(key == 'down') ra -= a;				}			}			lcadrs = cadrs-i;			x += lcadrs*this.timeK*this.koef*s*Math.sin((90-ra)*this.PI180);			y -= lcadrs*this.timeK*this.koef*s*Math.sin(ra*this.PI180);			s -= lcadrs*this.timeK*(this.koef*Math.sin(ra*this.PI180))*(this.wspeed/(y/this.wspeed))/4.5;			if(key == 'up') ra += a*lcadrs			else if(key == 'down') ra -= a*lcadrs;*/			return {type:'correct',x:x,y:y,s:s,key:key,shift:this.shift,a:a,ra:ra,k:0};		}	}	this.setCorrect = function(data){		if(data.k == 0){			this.x = data.x; //-33-733			this.y = data.y; //0-600			this.s = data.s;			this.key = data.key;			this.shift = data.shift;			this.timeK = 1000/60/40;			if(this.shift && this.superSpeed >= 100){				this.timeK += (this.wspeed+this.wSuperSpeed)/this.wspeed;			}			this.a = this.timeK*this.koef*this.wradius*2.5;			this.ra = data.ra;			this.pinger = data.ping;			var cadrs = this.pinger/this.tr;			var lcadrs;			var i = 0;			if(cadrs>=1){				for(i; i < cadrs; i++){					this.x += this.timeK*this.koef*this.s*Math.sin((90-this.ra)*this.PI180);					this.y -= this.timeK*this.koef*this.s*Math.sin(this.ra*this.PI180);					this.s -= this.timeK*(this.koef*Math.sin(this.ra*this.PI180))*(this.wspeed/(this.y/this.wspeed))/4.5;					//if(this.key == 'up') this.ra += this.a*this.timeK					//else if(this.key == 'down') this.ra -= this.a*this.timeK;				}			}			lcadrs = cadrs-i;			this.x += lcadrs*this.timeK*this.koef*this.s*Math.sin((90-this.ra)*this.PI180);			this.y -= lcadrs*this.timeK*this.koef*this.s*Math.sin(this.ra*this.PI180);			this.s -= lcadrs*this.timeK*(this.koef*Math.sin(this.ra*this.PI180))*(this.wspeed/(this.y/this.wspeed))/4.5;			//if(this.key == 'up') this.ra += lcadrs*this.a*this.timeK			//else if(this.key == 'down') this.ra -= lcadrs*this.a*this.timeK;			console.log('correct: '+this.key);		}		else{			this.key = data.key;			this.shift = data.shift;		}	}}var Rocket = function(params, x, y){	this.koef = params.koef;	this.x = params.x;	this.y = params.y;	this.s = params.speed;	this.PI180 = Math.PI/180;	this.typeW = params.typeW;	this.a = (this.typeW == 'H') ? -Math.atan2(this.y-y, this.x-x)*180/Math.PI+((this.koef == 1)?180:0) : params.a;	this.hit = params.hit;	this.image = new Image();	this.image.src = (this.koef == 1) ? 'images/rockets/'+this.typeW+'.png' : 'images/rockets/r'+this.typeW+'.png';	this.w = (this.typeW == 'A') ? 13 : 28;	this.h = (this.typeW == 'A') ? 6 : 10;	this.draw = function(t){		if(this.x > 1000 || this.x < -300 || this.y > 1000 || this.y < -300) return 'coordLimit';		var timeK = t.tr/40;		this.nach = timeK*this.koef*this.s;		this.y -= this.nach*Math.sin(this.a*this.PI180);		this.x += this.nach*Math.sin((90-this.a)*this.PI180);		ctx.globalAlpha = 1;		ctx.save();		ctx.translate(this.x, this.y);		ctx.rotate(-this.a*this.PI180);		ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);		ctx.restore();	}}var Effect = function(params){	this.rand = function(min,max){		return Math.random()*(max - min) + min;	}	this.typeW = params.type;	this.side = params.side || params.koef;	switch(this.typeW){		case 'smoke':			this.op = this.rand(0.0001,0.5);			params.life = (params.life <= 10) ? 10 : params.life;			this.dop = this.rand(params.life/100*0.01,params.life/100*0.02);			this.r = this.rand(3,10);			this.dr = this.rand(0.2,0.7);			this.x = this.rand(params.x-2,params.x+2);			this.dx = this.rand(-0.1,0.1);			this.y = this.rand(params.y-2,params.y+2);			this.dy = this.rand(0.5,0.2);			this.draw = function(t){				this.op -= this.dop;				this.r += this.dr;				this.x -= this.dx;				this.y -= this.dy;				if(this.op <= 0 || this.x < -100 || this.x > 900 || this.y < -30 || this.y > 900){					ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.globalAlpha = this.op;					ctx.drawImage(smoke_canvas,this.x-this.r/2,this.y-this.r/2,this.r,this.r);				}			}		break;		case 'message':			this.op = 1;			this.dop = 0.015;			this.x = params.x;			this.y = params.y-60;			this.text = params.text;			this.dx = this.rand(-0.7, 0.7);			this.dy = this.rand(0.7, 1.5);			this.draw = function(t){				this.op -= this.dop;				this.y -= this.dy;				this.x += this.dx;				if(this.op <= 0){					ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.globalAlpha = this.op;					ctx.fillText(this.text, this.x, this.y);					//ctx.strokeText(this.text, this.x, this.y);				}			}		break;		case 'A':			this.x = params.x;			this.y = params.y;			this.w = 15;			this.h = 24;			this.op = 1;			this.dop = 0.03;			this.image = new Image();			this.image.src = 'images/effects/A.png';			this.angle = this.rand(0,360)*Math.PI/180;			this.draw = function(t){				this.op -= this.dop;				this.w += 3;				this.h += 3;				if(this.op <= 0){					ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.globalAlpha = this.op;					ctx.save();					ctx.translate(this.x, this.y);					ctx.rotate(this.angle);					ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);					ctx.restore();				}			}		break;		case 'B':			this.op = 1;			this.dop = 0.035;			this.fillStyle = '#ff4500';			this.draw = function(t){				this.op -= this.dop;				if(this.op <= 0){					ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.globalAlpha = this.op;					ctx.fillStyle = this.fillStyle;					ctx.fillRect(0, 0, 700, 600);				}			}		break;		case 'C':			this.x = params.x;			this.y = params.y;			this.w = 5;			this.h = 5;			this.op = 1;			this.dop = 0.03/((params.damage > 10) ? 10 : params.damage);			this.image = new Image();			this.image.src = 'images/effects/C.png';			this.angle = this.rand(0,360)*Math.PI/180;			this.draw = function(t){				this.w += 7;				this.h += 7;				this.op -= this.dop;				if(this.op <= 0){					ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.globalAlpha = this.op;					ctx.save();					ctx.translate(this.x, this.y);					ctx.rotate(this.angle);					ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);					ctx.restore();				}			}		break;		case 'D':			this.x = params.x;			this.y = params.y;			this.w = 5;			this.h = 5;			this.op = 1;			this.dop = 0.03/((params.damage > 10) ? 10 : params.damage);			this.image = new Image();			this.image.src = 'images/effects/D.png';			this.angle = this.rand(0,360)*Math.PI/180;			this.draw = function(t){				this.w += 7;				this.h += 7;				this.op -= this.dop;				if(this.op <= 0){					ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.globalAlpha = this.op;					ctx.save();					ctx.translate(this.x, this.y);					ctx.rotate(this.angle);					ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);					ctx.restore();				}			}		break;		case 'E':			this.time = params.damage*500;			this.why = [[29,20,0],[31,19,21],[27,20,41],[29,20,0],[31,19,21],[27,20,41]];			this.a = [this.rand(0,360),this.rand(0,360),this.rand(0,360),this.rand(0,360),this.rand(0,360),this.rand(0,360)];			this.times = [this.rand(300,800),this.rand(300,800),this.rand(300,800),this.rand(300,800),this.rand(300,800),this.rand(300,800)];			this.image = new Image();			this.image.src = 'images/effects/E.png';			this.side = params.side;			this.draw = function(t){				t.x = (this.side == 0) ? t.x : t.x1;				t.y = (this.side == 0) ? t.y : t.y1;				this.time -= t.tr;				if(this.time <= 0){					return 'off';				}				ctx.globalAlpha = 1;				ctx.save();				ctx.translate(t.x, t.y);				for(var i = 0; i < this.a.length; i++){					this.times[i] -= 40;					if(this.times[i] <= 0){						this.times[i] = this.rand(100,500);						this.a[i] = this.rand(0,360);					}					ctx.rotate(this.a[i]*Math.PI/180);					ctx.drawImage(this.image, 0, this.why[i][2], this.why[i][0], this.why[i][1], -2, -2, this.why[i][0], this.why[i][1]);				}								ctx.restore(); 			}		break;		case 'F':			this.op = 1;			this.dop = 0.004/params.damage;			this.fillStyle = '#fff';			this.draw = function(t){				this.op -= this.dop;				if(this.op <= 0){						ctx.globalAlpha = 0;					return 'off';				}				else{					ctx.save();					ctx.globalAlpha = this.op;					ctx.fillStyle = this.fillStyle;					ctx.fillRect(0, 0, 700, 600);					ctx.restore();				}			}		break;		case 'G':			this.draw = function(t){return 'off';};		break;		case 'H':			this.draw = function(t){return 'off';};		break;		case 'I':			this.wh = 10;			this.op = 1;			this.dop = 0.01;			this.image = new Image();			this.image.src = 'images/effects/I.png';			this.side = params.side;			this.draw = function(t){				t.x = (this.side == 0) ? t.x : t.x1;				t.y = (this.side == 0) ? t.y : t.y1;				this.op -= this.dop;				if(this.op <= 0){					ctx.globalAlpha = 0;					return 'off';				}				this.wh += 3;				ctx.globalAlpha = this.op;				ctx.save();				ctx.translate(t.x, t.y);				ctx.drawImage(this.image, -this.wh/2, -this.wh/2, this.wh, this.wh);				ctx.restore(); 			}		break;		case 'J':			this.time = params.per;			this.w = 77;			this.h = 77;			this.op = 0;			this.dop = 0.004;			this.dopk = -1;			this.image = new Image();			this.image.src = 'images/effects/J.png';			this.draw = function(t){				this.time -= t.tr;				if(this.time <= 0){					this.op -= this.dop;					if(this.op <= 0){						ctx.globalAlpha = 0;						return 'off';					}				}				else{					if(this.op > 1) this.dopk = -1					if(this.op < 0.4) this.dopk = 1;					this.op += this.dop*this.dopk;				}				ctx.globalAlpha = this.op;				ctx.save();				ctx.translate(t.x, t.y);				ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);				ctx.restore(); 			}		break;		case 'K':			this.time = params.per;			this.koef = params.koef;			this.draw = function(t){				this.time -= t.tr;				if(this.time <= 0) return 'off';				t.x = t.x+this.koef*(Math.cos((t.ra-(10*this.koef))*Math.PI/180)*40);				t.y = t.y-this.koef*(Math.sin((t.ra-(10*this.koef))*Math.PI/180)*40);				ctx.globalAlpha = 1;				ctx.beginPath();				ctx.lineWidth = 1;				ctx.strokeStyle = '#f00';				ctx.moveTo(t.x, t.y);				ctx.lineTo(t.x+this.koef*(Math.cos(t.ra*Math.PI/180)*2000), t.y-this.koef*(Math.sin(t.ra*Math.PI/180)*2000));				ctx.stroke();			}		break;		case 'L':			this.draw = function(t){return 'off'};		break;		case 'M':			this.time = params.per;			this.w = 77;			this.h = 77;			this.op = 0;			this.dop = 0.004;			this.dopk = -1;			this.image = new Image();			this.image.src = 'images/effects/M.png';			this.draw = function(t){				this.time -= t.tr;				if(this.time <= 0){					this.op -= this.dop;					if(this.op <= 0){						ctx.globalAlpha = 0;						return 'off';											}				}				else{					if(this.op > 1) this.dopk = -1					if(this.op < 0.4) this.dopk = 1;					this.op += this.dop*this.dopk;				}				ctx.globalAlpha = this.op;				ctx.save();				ctx.translate(t.x, t.y);				ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);				ctx.restore(); 			}		break;		case 'N':			this.time = params.per;			this.w = 77;			this.h = 77;			this.op = 0;			this.dop = 0.004;			this.dopk = -1;			this.image = new Image();			this.image.src = 'images/effects/N.png';			this.draw = function(t){				this.time -= t.tr;				if(this.time <= 0){					this.op -= 0.01;					if(this.op <= 0){						ctx.globalAlpha = 0;						return 'off';					}				}				else{					if(this.op > 1) this.dopk = -1					if(this.op < 0.4) this.dopk = 1;					this.op += this.dop*this.dopk;				}				ctx.globalAlpha = this.op;				ctx.save();				ctx.translate(t.x, t.y);				ctx.drawImage(this.image, -this.w/2, -this.h/2, this.w, this.h);				ctx.restore(); 			}		break;		case 'O':			this.time = params.per;			this.wh = [8];			this.op = [1];			this.times = 0;			this.dop = 0.003;			this.image = new Image();			this.image.src = 'images/effects/O.png';			this.draw = function(t){				this.time -= t.tr;				if(this.wh.length < 10 && this.times > 40 && this.time >= 0){ 					this.wh.push(5);					this.op.push(1);					this.times = 0;				} 				this.times += 1;				if(this.wh.length == 0){					ctx.globalAlpha = 0;					return 'off';									}				for(var i = 0; i < this.wh.length; i++){					this.wh[i] += 0.5;					this.op[i] -= this.dop;					if(this.op[i] < 0){						this.op.splice(i,1);						this.wh.splice(i,1);						i-=1;					}					else{						ctx.globalAlpha = this.op[i];						ctx.save();						ctx.translate(t.x, t.y);						ctx.drawImage(this.image, -this.wh[i]/2, -this.wh[i]/2, this.wh[i], this.wh[i]);						ctx.restore();					}				}			}		break;		case 'P':			this.time = params.per;			this.image = new Image();			this.image.src = 'images/effects/P.png';			this.side = params.koef;			this.i = 0;			this.time2 = 0;			this.y = [0,11,22,33,44,55,66];			this.draw = function(t){				this.time -= t.tr;				if(this.time <= 0) return 'off';								this.time2 += 1;				if(this.time2 >= 2){					this.i += 1;					this.time2 = 0;				}				if(this.i >= this.y.length) this.i = 0;								t.x += this.side*40;				t.y += 20;				ctx.globalAlpha = 1;				ctx.save();				ctx.translate(t.x, t.y);				ctx.drawImage(this.image, 0, this.y[this.i], 11, 10, 0, 0, 15, 15);				ctx.restore(); 			}		break;		case 'stock':			this.draw = function(){return 'off'};		break;		case 'per':			this.type = params.typeW;			this.tper = false; //окончание перезарядки			this.per = false; //начало перезарядки			this.firstdraw = function(){				wp_canv[this.type][1].clearRect(0,0,50,50);				wp_canv[this.type][1].beginPath();				wp_canv[this.type][1].arc(25,25,22,Math.PI,3*Math.PI);				wp_canv[this.type][1].stroke();				wp_canv[this.type][1].closePath();			};			this.firstdraw();			this.alfaTop = Math.PI;			this.fl = false;			this.draw = function(params){				if(this.per){					params.tper = params.per - this.per;					params.per = this.tper - this.per;									if(this.fl = !this.fl && params.tper <= params.per+400){						this.alfaTop = 2*Math.PI*(params.tper/params.per);						wp_canv[this.type][1].clearRect(0,0,50,50);						wp_canv[this.type][1].beginPath();						wp_canv[this.type][1].arc(25,25,22,Math.PI,Math.PI+this.alfaTop);						wp_canv[this.type][1].stroke();						wp_canv[this.type][1].closePath();					}				}			}					break;		default:			this.draw = function(){return 'off'}	}}var turn = []; var errors = [];var weapons_0 = [];var weapons_1 = [];var bonuses = [];var particles = [];var lasers = [];var smoke = [];$(document).ready(function(){VK.init(function(){	//VK.Widgets.Ads('vk_ads_4726', {}, {"ad_unit_id":4726,"ad_unit_hash":"077e6d88a789bf207c6b8f058e198327"});	ctx = document.getElementById('particles').getContext('2d');	smoke_canvas = document.createElement('canvas'); smoke_canvas.width = 20; smoke_canvas.height = 19;	smoke_context = smoke_canvas.getContext('2d');	smoke_image = new Image();	smoke_image.src = 'images/effects/smoke.png';	smoke_image.onload = function(){		smoke_context.drawImage(smoke_image, 0, 0);	}		message('preloader', 'Подключение к серверу...');	var avatars = [];	try{		console.log(111);		var sock = io('https://78.155.197.229:80', {reconnect: false, 'transports': ['websocket', 'polling']});		//var sock = io('https://78.155.197.229:1010', {'transports': ['websocket', 'polling']});				//var sock = io.connect('https://78.155.197.229:8090', {reconnect: false});		console.log(sock);	} catch(er) {		message('one', 'Игровой сервер временно недоступен. Попробуйте войти позже.', 'ОК');		$('#one .but').attr({'href': 'http://vk.com/aviamyaso_online', 'target': '_parent'});		$('#one close').click(function(){$('#one .but').click()});	}	VK.api('users.get',{fields:'uid,first_name,last_name,photo_200',https: 1}, function(uid){		VK.api('friends.getAppUsers', {https: 1}, function(fids){			$('#inTurn .foto img').attr('src', uid.response[0].photo_200);			sock.send($.toJSON({type:'init',id:uid.response[0].uid,foto:uid.response[0].photo_200,name:uid.response[0].first_name,full_name:uid.response[0].first_name+' '+uid.response[0].last_name,fids: (fids.response.join(',')+','+uid.response[0].uid), token: location.search.replace(/(.*)(auth_key=)([a-z0-9]*)(.*)/g, '$3')}));		})	});	window.onbeforeunload = function(){		sock.disconnect();	};	sock.on('connect', function () {		sock.on('message', function (msg) {			if(weapons.warMessages[msg.type] && avatars[0].cancelAnimFrame){				console.log('Событые '+msg.type+' произошло после окончания битвы');				msg.type = false;			}			switch(msg.type){				case 'init':					message('preloader', 'Инициализация...');					message();					$('.message .close').css('background', 'url(images/sprites/buttons-sprite.png) no-repeat -296px -112px');					avatars[0] = new Avatar(msg);					//					for(var i = 0; i < 8; i++){						console.log(avatars[0].wl[weapons.all[i]]);						$('.weapons .'+weapons.all[i]+' .valWL span').html(avatars[0].wl[weapons.all[i]]);					}					$(document).tooltip({opacity: 0.7, content: function(){return $(this).prop('title')}});					$('.war .turn').mCustomScrollbar({advanced:{updateOnContentResize: true}});					$('.medails .c1 > div').mCustomScrollbar({advanced:{updateOnContentResize: true}});					$('.tehno .c1 > div').mCustomScrollbar({advanced:{updateOnContentResize: true}});					$('.ratings .scroll').mCustomScrollbar({advanced:{updateOnContentResize: true}});					msg.chat = msg.chat.split('###');					for(var i = 0; i < msg.chat.length; i++){						$('#content .chat .messages .m').append(msg.chat[i]);					}					$('#content .chat .messages').mCustomScrollbar({advanced:{updateOnContentResize: true}});					//заполнение быстрой информации в верхнем меню					$('#gas span').html(avatars[0].gas);					//$('#life2 span').html(avatars[0].life);					avatars[0].setLife();					$('#rating span, #inTurn .rating').html(avatars[0].rating);					$('#stars span').html(avatars[0].stars);					$('#info .online span').html('<b title = "Всего в игре">'+msg.online+'</b> / <b title = "Войн в данный момент">'+0+'</b>');					$('#botGame .lv').html(msg.levelBot);					document.getElementById('infoWar').style.left = 350-($('#infoWar').outerWidth()/2);					//клик по пунктам меню					$('#menu td[id]').click(function(){ 						if($(this).attr('class') != 'active'){							var id = this.id;							switch(this.className){								case 'buyStars':									id = 'bank';								break;							}							$('#content > div').fadeOut(250);							$('#content > div.'+id).delay(250).fadeIn(250);							var left = $(this).position().left+$(this).outerWidth(true)/2-14;							if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){								left = (left/((screen.height < screen.width) ? screen.height/600 : screen.width/700)) + (14-(14/((screen.height < screen.width) ? screen.height/600 : screen.width/700)));							}							$('#menuLight').css({'left': left});							$('#menu td').removeClass('active');							$(this).addClass('active');							if(id == 'chat'){								$(this).attr('style', '');								setTimeout(function(){$('#content .chat .messages').mCustomScrollbar("scrollTo","bottom",{scrollInertia:1000});$('#content .chat input').focus();}, 1000);							}						} 					});					//покупка звезд					$('#stars div.buyStars').click(function(){						$('#bank').click();					});					//слив топлива					$('#gas .getGas').click(function(){						if(avatars[0].gas >= 100){							message('one', 'У тебя полный бак!', 'OK');							$('#one .but, #one .close').click(function(){message()});						}						else{							if(avatars[0].turn){								message('one', 'Ты уже на взлетной полосе! Выйди из очереди, если хочешь заправиться!', 'ОК');								$('#one .but, #one .close').click(function(){message()});							}							else{								message('preloader', 'Сливаем топливо у друзей...<br/>Слито: 0');								avatars[0].gasPlus = 0;								avatars[0].getGas = setInterval(function(){									sock.send($.toJSON({type: 'getGas'}));								}, 2000);							}						}					});					//отображение параметров самолета (полоски + %)					function setPlaneParams(mk,pow){						//pow - выбранное меню planes of war						var menuclass = pow ? 'planes' : 'war';						pow = !!pow ? 'activePlane' : 'plane';						var params = getWidth(avatars[0].speed, weapons[avatars[0][pow]][mk].speed, 94);						$('#content .'+menuclass+' .speed .left').css('width', params[0]).parent().prev().html(params[1]);						$('#content .'+menuclass+' .speed .light').css('margin-left', params[0]-2);						params = getWidth(avatars[0].radius, weapons[avatars[0][pow]][mk].radius, 94);						$('#content .'+menuclass+' .radius .left').css('width', params[0]).parent().prev().html(params[1]);						$('#content .'+menuclass+' .radius .light').css('margin-left', params[0]-2);						params = getWidth(avatars[0].suspension, weapons[avatars[0][pow]][mk].suspension, 94);						$('#content .'+menuclass+' .suspension .left').css('width', params[0]).parent().prev().html(params[1]);						$('#content .'+menuclass+' .suspension .light').css('margin-left', params[0]-2);						params = getWidth(avatars[0].damage, weapons[avatars[0][pow]][mk].damage, 94);						$('#content .'+menuclass+' .damage .left').css('width', params[0]).parent().prev().html(params[1]);						$('#content .'+menuclass+' .damage .light').css('margin-left', params[0]-2);						params = getWidth(avatars[0].rate, weapons[avatars[0][pow]][mk].rate, 94);						$('#content .'+menuclass+' .rate .left').css('width', params[0]).parent().prev().html(params[1]);						$('#content .'+menuclass+' .rate .light').css('margin-left', params[0]-2);						params = null; delete params;					}					//отображение информации о самолете при клике на самолет в меню боя					$('#content .war .plane').click(function(){												if(avatars[0].planeNum < avatars[0].planesTrue.length-1) avatars[0].planeNum += 1;						else avatars[0].planeNum = 0;						avatars[0].planeMk = 0;						var mk = 0;						$('#content .war .wmk span.wkk0').css('display', (avatars[0].planes[weapons.planes[avatars[0].planesTrue[avatars[0].planeNum]]] == 1)?'inline-block':'none');						$('#content .war .wmk span.wkk1').css('display', (avatars[0].planes[weapons.planes[avatars[0].planesTrue[avatars[0].planeNum]]+6] == 1)?'inline-block':'none');						$('#content .war .wmk span.wkk2').css('display', (avatars[0].planes[weapons.planes[avatars[0].planesTrue[avatars[0].planeNum]]+12] == 1)?'inline-block':'none');						$('#content .war .wmk span').css('opacity', 0.3);						$('#content .war .wmk span.wkk0').css('opacity', 1);						avatars[0].plane = avatars[0].planesTrue[avatars[0].planeNum].replace(/\d/g, "");						$('#name span').html(weapons[avatars[0].plane][mk].name);						$('#content .war .c1 .choisePlane img.plane').attr('src', 'images/planes/zip/big-'+avatars[0].plane+'0.png');						setPlaneParams(mk);						$('#content .war .weapons > div').addClass('not');						for(var i = 0; i < weapons[avatars[0].plane][mk].weapons.length; i++){							$('#content .war .'+weapons[avatars[0].plane][mk].weapons[i]).removeClass('not');						}						for(i = 0; i < weapons[avatars[0].plane][mk].bonuses.length; i++){							$('#content .war .'+weapons[avatars[0].plane][mk].bonuses[i]).removeClass('not');						}					});					//отображение информации о самолете при клике на МК в меню боя					$('#content .war .wmk span').click(function(){						avatars[0].planeMk = this.className.replace(/wkk/g, "");						var mk = avatars[0].planeMk;						$('#content .war .wmk span').css('opacity', 0.3);						$('#content .war .wmk span.wkk'+mk).css('opacity', 1);						$('#content .war .c1 .choisePlane img.plane').attr('src', 'images/planes/zip/big-'+(avatars[0].plane+mk)+'.png');						$('#name span').html(weapons[avatars[0].plane][mk].name);						setPlaneParams(mk);						$('#content .war .weapons > div').addClass('not');						for(var i = 0; i < weapons[avatars[0].plane][mk].weapons.length; i++){							$('#content .war .'+weapons[avatars[0].plane][mk].weapons[i]).removeClass('not');						}						for(i = 0; i < weapons[avatars[0].plane][mk].bonuses.length; i++){							$('#content .war .'+weapons[avatars[0].plane][mk].bonuses[i]).removeClass('not');						}					})					//выбор ставки					$('#inTurn .plus, #inTurn .minus').click(function(){						avatars[0].range += (this.className == 'plus') ? 1 : -1;						if(avatars[0].range >= avatars[0].stars) avatars[0].range = avatars[0].stars;						if(avatars[0].range >= Math.floor(avatars[0].rating/800)) avatars[0].range = Math.floor(avatars[0].rating/800);						if(avatars[0].range >= 9) avatars[0].range = 9;						if(avatars[0].range <= 0) avatars[0].range = 0;						$('#inTurn .range').html(avatars[0].range);					});					//вход/выход из очереди					$('#turn').on('click', '#inTurn .button, tr.id .button, .getParamOpp', function(){						if($(this).attr('class').split(' ')[0] == 'getParamOpp'){							sock.send($.toJSON({type: 'getParamOpp', id: $(this).attr('class').split(' ')[1].replace(/\D*/g, '')}));							message('preloader', 'Взлом системы противника...');													}						else{							if($(this).parent().parent().attr('id') == "inTurn"){								if(!avatars[0].timeoutTurn){									if(!avatars[0].turn){										avatars[0].turn = true;										avatars[0].timeoutTurn = true;										setTimeout(function(){											sock.send($.toJSON({type: 'inTurn', range: avatars[0].range, plane: avatars[0].plane, planeMk: avatars[0].planeMk}));											avatars[0].timeoutTurn = false;										}, 2000);										$(this).html('Ожидание...');									}									else{										avatars[0].turn = false;										sock.send($.toJSON({type: 'outTurn'}));																	$(this).html('Ожидание...');									}								}							}							else{								if(this.id) avatars[0].oppId = this.id.replace('id', '');								if(avatars[0].oppId){									sock.send($.toJSON({type: 'initWar', id: avatars[0].oppId, plane: avatars[0].plane, planeMk: avatars[0].planeMk}));									message('one', 'Ожидание ответа игрока...</br><img src = "images/search.gif" alt = "Ожидание..."></img>','Отмена');									$('#one .but, #one .close').click(function(){										sock.send($.toJSON({type: 'initWarOkCancel'}));										message();									})								}							}						}					});					//клик по человеку из рейтинга					$('.ratings .list').on('click', 'tr[class]', function(){						var pars = turnir[turnir.turnirs[avatars[0].curTurnir]];						var num = this.className.replace(/win7|win30|rating/g, '')-1;							$('.ratings .profile .photo').attr('src', pars.players[num].foto);						$('.ratings .profile .name span').html(pars.players[num].name);						$('.ratings .profile .rating span').html(pars.players[num].rating);						$('.ratings .profile .game span').html(chislen(pars.players[num].game, [' день',' дня',' дней']));						$('.ratings .profile .win span').html(pars.players[num].win);						$('.ratings .profile .fail span').html(pars.players[num].fail);						$('.ratings .profile .online span').html(pars.players[num].online == 0 ? 'Сейчас не в игре' : 'Сейчас в игре').css('color', pars.players[num].online == 0 ? '#f00' : '#0f0');						$('.ratings .profile .med div').each(function(){							$(this).css('display', pars.players[num].medails[this.className.replace(/\D/g, '')-1] == 1 ? 'block' : 'none');						});						$('.ratings .profile .ar span').html(pars.players[num].posRating);						$('.ratings .profile .nr span').html(pars.players[num].posWin7);						$('.ratings .profile .mr span').html(pars.players[num].posWin30);					});					//клик на бой с ИИ					$('#botGame .buttonb').click(function(){						message('two', 'Ты собираешься вступить в схватку с искусственным интеллектом '+avatars[0].levelBot+' уровня. Если победишь - получишь '+weapons.bots(avatars[0].levelBot)+'. Проиграешь - потеряешь только потраченное оружие.', 'Начать бой!', 'Попробую потом');						$('#two .but1').click(function(){							avatars[0].oppId = 'computer';							sock.send($.toJSON({type: 'startWar', plane: avatars[0].plane, planeMk: avatars[0].planeMk, range: 1, bot: 1}));							message('preloader', 'Создание игры...');						});						$('#two .but2, #two .close').click(function(){message()});					});					//клик на большой самолет в меню самолетов					$('#content .planes .carousel img').click(function(){						//$('.planes img.'+avatars[0].activePlane).attr('src', 'images/planes/zip/big-'+avatars[0].activePlane+'0.png');						avatars[0].activePlane = this.className;						//avatars[0].activePlaneMk = 0;						var mk = avatars[0].activePlaneMk || 0;						$('#content .planes .c3 span').css('opacity', 0.3);						$('#content .planes .c3 .mkk'+mk).css('opacity', 1);												$('#content .planes .c3 img.mk0').attr('src', 'images/planes/zip/big-'+avatars[0].activePlane+'0.png');						$('#content .planes .c3 img.mk1').attr('src', 'images/planes/zip/big-'+avatars[0].activePlane+'1.png');						$('#content .planes .c3 img.mk2').attr('src', 'images/planes/zip/big-'+avatars[0].activePlane+'2.png');												$('#content .planes .carousel img').css('background', 'none');						$(this).css('background', 'url(images/bg-planes.png)');						$('#content .planes .c3 h1').html(weapons[avatars[0].activePlane][mk].name);						setPlaneParams(mk,true);						if(avatars[0].planes[weapons.planes[avatars[0].activePlane+mk]] == 0){							$('#content .planes .price span').html(weapons[avatars[0].activePlane][mk].price);							$('#content .planes .rating span').html(weapons[avatars[0].activePlane][mk].rating);							$('#content .planes .r0 span').html(weapons[avatars[0].activePlane][mk].resources[0]);							$('#content .planes .r1 span').html(weapons[avatars[0].activePlane][mk].resources[1]);							$('#content .planes .r2 span').html(weapons[avatars[0].activePlane][mk].resources[2]);							$('#content .planes .r3 span').html(weapons[avatars[0].activePlane][mk].resources[3]);							$('#content .planes .t0 span').html(weapons[avatars[0].activePlane][mk].tehno[0]);							$('#content .planes .t1 span').html(weapons[avatars[0].activePlane][mk].tehno[1]);							$('#content .planes .t2 span').html(weapons[avatars[0].activePlane][mk].tehno[2]);							$('#content .planes .t3 span').html(weapons[avatars[0].activePlane][mk].tehno[3]);							$('#content .planes .t4 span').html(weapons[avatars[0].activePlane][mk].tehno[4]);														$('#content .planes .price').css('opacity', weapons[avatars[0].activePlane][mk].price > avatars[0].stars ? 0.4 : 1);							$('#content .planes .rating').css('opacity', weapons[avatars[0].activePlane][mk].rating > avatars[0].rating ? 0.4 : 1);							$('#content .planes .r0').css('opacity', weapons[avatars[0].activePlane][mk].resources[0] > avatars[0].resources[0] ? 0.4 : 1);							$('#content .planes .r1').css('opacity', weapons[avatars[0].activePlane][mk].resources[1] > avatars[0].resources[1] ? 0.4 : 1);							$('#content .planes .r2').css('opacity', weapons[avatars[0].activePlane][mk].resources[2] > avatars[0].resources[2] ? 0.4 : 1);							$('#content .planes .r3').css('opacity', weapons[avatars[0].activePlane][mk].resources[3] > avatars[0].resources[3] ? 0.4 : 1);							$('#content .planes .t0').css('opacity', weapons[avatars[0].activePlane][mk].tehno[0] > avatars[0].tehno[0] ? 0.4 : 1);							$('#content .planes .t1').css('opacity', weapons[avatars[0].activePlane][mk].tehno[1] > avatars[0].tehno[1] ? 0.4 : 1);							$('#content .planes .t2').css('opacity', weapons[avatars[0].activePlane][mk].tehno[2] > avatars[0].tehno[2] ? 0.4 : 1);							$('#content .planes .t3').css('opacity', weapons[avatars[0].activePlane][mk].tehno[3] > avatars[0].tehno[3] ? 0.4 : 1);							$('#content .planes .t4').css('opacity', weapons[avatars[0].activePlane][mk].tehno[4] > avatars[0].tehno[4] ? 0.4 : 1);														var op = 0;							$('#content .planes>table td').each(function(ind){								op += ($(this).css('opacity')-0); 							});							if(op < 11.8){								$('.buy.plane').css('opacity', 0.4);							}							else{								$('.buy.plane').css('opacity', 1);							}														$('#content .planes>table').css('display', 'block');							$('#content .planes .buyes').css('display', 'none');													}						else{							$('#content .planes>table').css('display', 'none');							$('#content .planes .buyes').css('display', 'block');						}						$('#content .planes .weapons div').addClass('not');						for(var i = 0; i < weapons[avatars[0].activePlane][mk].weapons.length; i++){							$('#content .planes .'+weapons[avatars[0].activePlane][mk].weapons[i]).removeClass('not');						}						for(i = 0; i < weapons[avatars[0].activePlane][mk].bonuses.length; i++){							$('#content .planes .'+weapons[avatars[0].activePlane][mk].bonuses[i]).removeClass('not');						}						$('#content .planes .c3 img.mk'+mk).click();					});					//клик на маленький самолет в меню самолетов					$('#content .planes .c3 img, #content .planes .c3 span').click(function(){						avatars[0].activePlaneMk = this.className.replace(/mk/g, "");						avatars[0].activePlaneMk = avatars[0].activePlaneMk.replace(/k/g, "");						var mk = avatars[0].activePlaneMk;						$('#content .planes .c3 span').css('opacity', 0.3);						$('#content .planes .c3 .mkk'+mk).css('opacity', 1);						//$('.planes img.'+avatars[0].activePlane).attr('src', 'images/planes/zip/big-'+(avatars[0].activePlane+mk)+'.png');						$('.planes img.default').attr('src', 'images/planes/zip/big-'+('default'+mk)+'.png');						$('.planes img.speed').attr('src', 'images/planes/zip/big-'+('speed'+mk)+'.png');						$('.planes img.suspension').attr('src', 'images/planes/zip/big-'+('suspension'+mk)+'.png');						$('.planes img.damage').attr('src', 'images/planes/zip/big-'+('damage'+mk)+'.png');						$('.planes img.nyancat').attr('src', 'images/planes/zip/big-'+('nyancat'+mk)+'.png');						$('.planes img.radius').attr('src', 'images/planes/zip/big-'+('radius'+mk)+'.png');						/*$('#content .planes .carousel img:not(.'+avatars[0].activePlane+')').css({width: 50, height: 25, 'margin-top': 37}, 500);						$('#content .planes .carousel img.'+avatars[0].activePlane).css({width: 200, height: 100, 'margin-top': 10}, 500);*/						$('#content .planes .c3 h1').html(weapons[avatars[0].activePlane][mk].name);						setPlaneParams(mk,true);						$('#content .planes .weapons div').addClass('not');						for(var i = 0; i < weapons[avatars[0].activePlane][mk].weapons.length; i++){							$('#content .planes .'+weapons[avatars[0].activePlane][mk].weapons[i]).removeClass('not');						}						for(i = 0; i < weapons[avatars[0].activePlane][mk].bonuses.length; i++){							$('#content .planes .'+weapons[avatars[0].activePlane][mk].bonuses[i]).removeClass('not');						}						i = null; delete i;						if(avatars[0].planes[weapons.planes[avatars[0].activePlane+mk]] == 0){							$('#content .planes .price span').html(weapons[avatars[0].activePlane][mk].price);							$('#content .planes .rating span').html(weapons[avatars[0].activePlane][mk].rating);							$('#content .planes .r0 span').html(weapons[avatars[0].activePlane][mk].resources[0]);							$('#content .planes .r1 span').html(weapons[avatars[0].activePlane][mk].resources[1]);							$('#content .planes .r2 span').html(weapons[avatars[0].activePlane][mk].resources[2]);							$('#content .planes .r3 span').html(weapons[avatars[0].activePlane][mk].resources[3]);							$('#content .planes .t0 span').html(weapons[avatars[0].activePlane][mk].tehno[0]);							$('#content .planes .t1 span').html(weapons[avatars[0].activePlane][mk].tehno[1]);							$('#content .planes .t2 span').html(weapons[avatars[0].activePlane][mk].tehno[2]);							$('#content .planes .t3 span').html(weapons[avatars[0].activePlane][mk].tehno[3]);							$('#content .planes .t4 span').html(weapons[avatars[0].activePlane][mk].tehno[4]);														$('#content .planes .price').css('opacity', weapons[avatars[0].activePlane][mk].price > avatars[0].stars ? 0.4 : 1);							$('#content .planes .rating').css('opacity', weapons[avatars[0].activePlane][mk].rating > avatars[0].rating ? 0.4 : 1);							$('#content .planes .r0').css('opacity', weapons[avatars[0].activePlane][mk].resources[0] > avatars[0].resources[0] ? 0.4 : 1);							$('#content .planes .r1').css('opacity', weapons[avatars[0].activePlane][mk].resources[1] > avatars[0].resources[1] ? 0.4 : 1);							$('#content .planes .r2').css('opacity', weapons[avatars[0].activePlane][mk].resources[2] > avatars[0].resources[2] ? 0.4 : 1);							$('#content .planes .r3').css('opacity', weapons[avatars[0].activePlane][mk].resources[3] > avatars[0].resources[3] ? 0.4 : 1);							$('#content .planes .t0').css('opacity', weapons[avatars[0].activePlane][mk].tehno[0] > avatars[0].tehno[0] ? 0.4 : 1);							$('#content .planes .t1').css('opacity', weapons[avatars[0].activePlane][mk].tehno[1] > avatars[0].tehno[1] ? 0.4 : 1);							$('#content .planes .t2').css('opacity', weapons[avatars[0].activePlane][mk].tehno[2] > avatars[0].tehno[2] ? 0.4 : 1);							$('#content .planes .t3').css('opacity', weapons[avatars[0].activePlane][mk].tehno[3] > avatars[0].tehno[3] ? 0.4 : 1);							$('#content .planes .t4').css('opacity', weapons[avatars[0].activePlane][mk].tehno[4] > avatars[0].tehno[4] ? 0.4 : 1);							var op = 0;							$('#content .planes>table td').each(function(ind){								op += ($(this).css('opacity')-0); 							});							if(op < 11.8){								$('.buy.plane').css('opacity', 0.4);							}							else{								$('.buy.plane').css('opacity', 1);							}														$('#content .planes>table').css('display', 'block');							$('#content .planes .buyes').css('display', 'none');													}						else{							$('#content .planes>table').css('display', 'none');							$('#content .planes .buyes').css('display', 'block');						}					})					//клик по оружию и отображение информации					$('#content .shop .weapons > div').click(function(){						//if(avatars[0].activeWeapon != this.className){							$('#content .shop .weapons .'+avatars[0].activeWeapon+' .back').fadeOut(500, function(){$(this).remove()});							avatars[0].activeWeapon = this.className;							$('#content .shop .weapons .'+avatars[0].activeWeapon).prepend('<div class = "back" style = "display: none"></div>').find('.back').fadeIn(500);							if(weapons.weaponsNI[this.className]){								$('#content .shop .rate td:first-child').html('Перезарядка');								$('#content .shop .rate').attr('title', 'Время перезарядки после выстрела');								$('#content .shop .left div').attr('class', this.className);								$('#content .shop .c1 h1').html(weapons[this.className].name+' WL-'+(avatars[0].wl[this.className]));								$('#content .shop .about').html(weapons[this.className].about);								$('#content .shop .damage span').html(weapons[this.className].damage[avatars[0].wl[this.className]-1] || '-');								$('#content .shop .radius span').html(weapons[this.className].radius[avatars[0].wl[this.className]-1] || '-');								$('#content .shop .speed span').html(weapons[this.className].speed[avatars[0].wl[this.className]-1] || '-');								$('#content .shop .rate span').html(weapons[this.className].rate[avatars[0].wl[this.className]-1]);								$('#content .shop .rating span').html(weapons[this.className].rating);								$('#content .shop .buy.weapon span').html(weapons[this.className].buy);								$('#content .shop .buy.wl').css('display', (avatars[0].wl[this.className] >= 3 ? 'none' : 'block'));								$('#content .shop .buy.wl span').html('Улучшить оружие до WL-'+(avatars[0].wl[this.className]+1));							}							else{								$('#content .shop .rate td:first-child').html('Длительность');								$('#content .shop .rate').attr('title', 'Длительность действия эффекта после использования');								$('#content .shop .left div').attr('class', this.className);								$('#content .shop .c1 h1').html(weapons[this.className].name);								$('#content .shop .about').html(weapons[this.className].about);								$('#content .shop .damage span').html(weapons[this.className].damage || '-');								$('#content .shop .radius span').html(weapons[this.className].radius || '-');								$('#content .shop .speed span').html(weapons[this.className].speed || '-');								$('#content .shop .rate span').html(weapons[this.className].rate);								$('#content .shop .rating span').html(weapons[this.className].rating);								$('#content .shop .buy.weapon span').html(weapons[this.className].buy);								$('#content .shop .buy.wl').css('display', 'none');							}						//}					});					$('.buy.wl').hover(						function(){							$('.shop .left table tr:not(.rating)').find('span').addClass('wlc');							$('#content .shop .damage span').html(weapons[avatars[0].activeWeapon].damage[avatars[0].wl[avatars[0].activeWeapon]]);							$('#content .shop .radius span').html(weapons[avatars[0].activeWeapon].radius[avatars[0].wl[avatars[0].activeWeapon]]);							$('#content .shop .speed span').html(weapons[avatars[0].activeWeapon].speed[avatars[0].wl[avatars[0].activeWeapon]]);							$('#content .shop .rate span').html(weapons[avatars[0].activeWeapon].rate[avatars[0].wl[avatars[0].activeWeapon]]);						},						function(){							$('.shop .left table tr span').removeClass('wlc');							$('#content .shop .damage span').html(weapons[avatars[0].activeWeapon].damage[avatars[0].wl[avatars[0].activeWeapon]-1]);							$('#content .shop .radius span').html(weapons[avatars[0].activeWeapon].radius[avatars[0].wl[avatars[0].activeWeapon]-1]);							$('#content .shop .speed span').html(weapons[avatars[0].activeWeapon].speed[avatars[0].wl[avatars[0].activeWeapon]-1]);							$('#content .shop .rate span').html(weapons[avatars[0].activeWeapon].rate[avatars[0].wl[avatars[0].activeWeapon]-1]);						}					);					//TODO изменение управления, глянуть что за кнопки для оружия					$('#content .shop .c2 table.info tr.key, #content .war .c1 .settings div').click(function(){						message('one', 'Нажмите клавишу, которую хотите присвоить этому оружию', 'Отмена');						var watKey = (this.className == 'key') ? avatars[0].activeWeapon : this.className;						$(document).keyup(function(ev){							avatars[0].keys[weapons.keysNames.indexOf(watKey)] = ev.keyCode;							if(watKey != 'up' && watKey != 'down'){								$('#content .weapons .c2 table.info tr.key td:last-child').html(weapons.keySet[avatars[0].keys[weapons.all.indexOf(watKey)]]);							}							else{								$('#content .war .c1 .settings tr td div.'+watKey).html(weapons.keySet[avatars[0].keys[weapons.keysNames.indexOf(watKey)]]);							}							$.cookie('keys', avatars[0].keys.join(','), {expires: 999});							message('one', 'Клавиша изменена успешно!', 'ОК');							$('#one .but, #one .close').click(function(){								$(document).unbind('keyup');								message();							});							$(document).unbind('keyup');						});						$('#one .but, #one .close').click(function(){							$(document).unbind('keyup');							message();						});					});					//покупка					$('.buy, .plus').click(function(){						avatars[0].typeBuy = this.className.replace(/plus |buy /g, '');						avatars[0].item = false;						console.log(avatars[0].typeBuy);						switch(avatars[0].typeBuy){							case 'param':								avatars[0].item = $(this).parent().attr('class');								if(avatars[0].item){									if(avatars[0][avatars[0].item]*10+1 > maxParam[avatars[0].item]*10){										message('one', 'Этот параметр уже на максимуме!', 'ОК');										$('#one .but, #one .close').click(function(){message()});										//avatars[0].item = false;									}									else if(avatars[0].rating < avatars[0][avatars[0].item+'Rating'] || avatars[0].stars < avatars[0][avatars[0].item+'Price']){										message('one', 'Недостаточно звёзд или рейтинга для увеличения параметра', 'Получить звёзды');										$('#one .but').click(function(){																					$('#bank').click();											message();										});										$('#one .close').click(function(){message();});										//avatars[0].item = false;									}									else{										message('two', ('Для увеличения'+weapons.paramsName[avatars[0].item]+'самолёта нужно иметь рейтинг не ниже '+(avatars[0][avatars[0].item+'Rating'])+', и заплатить '+(chislen((''+avatars[0][avatars[0].item+'Price']), [' звезду',' звезды',' звёзд']))+'. При покупке данная характеристика изменится для всех самолётов. Продолжить?'), 'Да', 'Нет');										$('#two .but1').click(function(){											sock.send($.toJSON({type: 'buy', typeBuy: avatars[0].typeBuy, item: avatars[0].item}));											message('preloader', 'Ожидание ответа от сервера...');										});										$('#two .but2, #two .close').click(function(){message();});									}								}								//avatars[0].item = false;							break;							case 'plane':								avatars[0].item = [avatars[0].activePlane, avatars[0].activePlaneMk];								if(avatars[0].item){									if($(this).css('opacity') < 0.9){										avatars[0].item = false;									}									else if(avatars[0].item[1] == 1 || avatars[0].item[1] == 2){										if(avatars[0].planes[weapons.planes[avatars[0].item[0]+''+(avatars[0].item[1]-1)]] != 1){											message('one','Для покупки самолёта модели Mk.'+['I','II','III'][avatars[0].item[1]]+' необходимо сначала купить модель Mk.'+['I','II','III'][avatars[0].item[1]-1],'OK');											$('#one .but, #one .close').click(function(){message();});											avatars[0].item = false;										}									}								}							break;							case 'wl':								avatars[0].item = avatars[0].activeWeapon;								if(avatars[0].item){									message('two', ('Для улучшения оружия "'+weapons[avatars[0].activeWeapon].name+'" нужно потратить '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][0]+' металла, '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][1]+' кремния, '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][2]+' тротилла и '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][3]+' алмазов. Продолжить?'), 'Да', 'Нет');									$('#two .but1').click(function(){										if(avatars[0].resources[0] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][0] ||										avatars[0].resources[1] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][1] ||										avatars[0].resources[2] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][2] ||										avatars[0].resources[3] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][3]){											message('one', 'Недостаточно ресурсов для усовершенствования оружия', 'Получить ресурсы');											$('#one .but').click(function(){																						$('#bank').click();												message();											});											$('#one .close').click(function(){message();});											avatars[0].item = false;										}										else{											sock.send($.toJSON({type: 'buy', typeBuy: avatars[0].typeBuy, item: avatars[0].item}));											message('preloader', 'Ожидание ответа от сервера...');										}									});									$('#two .but2, #two .close').click(function(){message();});									/*if(avatars[0].resources[0] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][0] ||									avatars[0].resources[1] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][1] ||									avatars[0].resources[2] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][2] ||									avatars[0].resources[3] < weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][3]){										message('one', 'Недостаточно ресурсов для усовершенствования ресурсов', 'Получить ресурсы');										$('#one .but').click(function(){																					$('#bank').click();											message();										});										$('#one .close').click(function(){message();});										avatars[0].item = false;									}									else{										message('two', ('Для улучшения оружия "'+weapons[avatars[0].activeWeapon].name+'" нужно потратить '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][0]+' металла, '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][1]+' кремния, '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][2]+' тротилла и '+weapons[avatars[0].activeWeapon].WLprice[avatars[0].wl[avatars[0].activeWeapon]][3]+' алмазов. Продолжить?'), 'Да', 'Нет');										$('#two .but1').click(function(){											sock.send($.toJSON({type: 'buy', typeBuy: avatars[0].typeBuy, item: avatars[0].item}));											message('preloader', 'Ожидание ответа от сервера...');										});										$('#two .but2, #two .close').click(function(){message();});									}*/								}								//avatars[0].item = false;							break;							case 'weapon':								avatars[0].item = avatars[0].activeWeapon;								if(avatars[0].item){									if(avatars[0].rating < weapons[avatars[0].item].rating || avatars[0].stars < 1){										message('one', 'Недостаточно звёзд или рейтинга для покупки', 'Получить звёзды');										$('#one .but').click(function(){																					$('#bank').click();											message();										});										$('#one .close').click(function(){message();});										avatars[0].item = false;									}									else if((avatars[0].weapons[avatars[0].item]+weapons[avatars[0].item].complect).toFixed(2) > maxParam[avatars[0].item]){										message('one', 'Нельзя купить больше. Максимум '+maxParam[avatars[0].item], 'ОК');										$('#one .but, #one .close').click(function(){message()});										avatars[0].item = false;									}								}							break;							case 'tehnology':								avatars[0].item = $(this).closest('.teh').attr('id').replace(/teh/g, '');								if(avatars[0].item){									if(avatars[0].tehnoNum != 10){										if(avatars[0].tehnoNum == avatars[0].item){											var ttt = avatars[0].tehnoTime - (1000*60*60*10);											if(ttt-avatars[0].unixTime > 0){ 												var tt = [Math.floor((ttt-avatars[0].unixTime)/1000/60/60), Math.floor((ttt-avatars[0].unixTime)/1000/60)];												tt[1] -= tt[0]*60;											}											else{												var tt = [0,0];											}											avatars[0].item = false;											message('two', 'За 3 голоса можно сократить время изучения технологии на 10 часов. После оплаты останется ждать'+(' '+chislen(tt[0], [' час ',' часа ',' часов '])+chislen(tt[1], [' минута',' минуты',' минут'])), 'Сократить время', 'Отмена');											$('#two .but1').click(function(){												avatars[0].buyTehnoTime = true;												sock.send($.toJSON({type: 'buyTehno'}));												if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};												VK.callMethod('showOrderBox', {type: 'item', item: 'tehno'});												message();											});											$('#two .close, #two .but2').click(function(){message()});										}										else{											message('one', 'Нельзя изучать одновременно несколько технологий', 'OK');											$('#one .but, #one .close').click(function(){message()});											avatars[0].item = false;										}									}									else if(avatars[0].stars < avatars[0].tehno[avatars[0].item]*10*avatars[0].tehno[avatars[0].item] || avatars[0].resources[3] < avatars[0].tehno[avatars[0].item]*3*avatars[0].tehno[avatars[0].item]){										message('one', 'Недостаточно звёзд или алмазов для изучения', 'Получить звёзды');										$('#one .but').click(function(){																					$('#bank').click();											message();										});										$('#one .close').click(function(){message();});										avatars[0].item = false;									}								}							break;						}						if(avatars[0].item && avatars[0].typeBuy && avatars[0].typeBuy != 'wl' && avatars[0].typeBuy != 'param'){							sock.send($.toJSON({type: 'buy', typeBuy: avatars[0].typeBuy, item: avatars[0].item})); 							message('preloader', 'Ожидание ответа от сервера...');						}					});					//купить % добавления рейтинга					$('#rating .buyRating').click(function(){						message('two','Ты можешь увеличить получаемый за победу рейтинг получая медали, или добавить 10% за 3 голоса.', 'Добавить 10%', 'Отмена');						$('#two .but1').click(function(){ 							avatars[0].buyRating = true;							sock.send($.toJSON({type: 'buyRating'}));							if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};							VK.callMethod('showOrderBox', {type: 'item', item: 'rating'});							message();						});						$('#two .close, #two .but2').click(function(){message()});					});					//купить чтото в банке					$('#content .bank .buys').click(function(){						if(this.className.replace(/buys /g, '') == 'cube1' || this.className.replace(/buys /g, '') == 'cube2'){							var it = this.className.replace(/buys /g, '');							message('two', it == 'cube1'?'В малом кубе ресурсов может находится до 50 ресурсов всех видов и до 50 звёзд. Хотите проодлжить покупку?':'В большом кубе ресурсов может находиться до 100 ресурсов всех видов и до 100 звёзд. Шанс выпадения большего количества ресурсов и звёзд гораздо выше чем в малом кубе ресурсов. Продолжить покупку?', 'Да', 'Нет');							$('#two .but2, #two .close').click(function(){message()});							$('#two .but1').click(function(){								avatars[0].buyCube = true;								sock.send($.toJSON({type: 'buyCube', val: it}));								if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};								VK.callMethod('showOrderBox', {type: 'item', item: it});							});						}						else{							sock.send($.toJSON({type: 'buyStars', val: this.className.replace(/buys /g, '')}));							if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};							VK.callMethod('showOrderBox', {type: 'item', item: this.className.replace(/buys _/g, '')});						}					});										//TODO управление					$('#content .war .control').click(function(){						document.getElementById('shadow').style.display = 'block';						document.getElementById('control').style.display = 'block';					});					//окно для изменения управления					$('#control > div').click(function(){						message('one', 'Нажмите клавишу, которую хотите назначить', 'Отмена');						var keyName = this.className;						$(document).keyup(function(ev){							avatars[0].keys[weapons.keysNames.indexOf(keyName)] = ev.keyCode;							$.cookie('keys', avatars[0].keys.join(','), {expires: 999})							$('#control .'+keyName).html(weapons.keySet[avatars[0].keys[weapons.keysNames.indexOf(keyName)]]);							message('one', 'Клавиша управления успешно изменена!', 'ОК');							$('#one .but, #one .close').click(function(){message()});						});						$('#one .but, #one .close').click(function(){message()});					});					//события клавиатуры в чате					$('#content .chat input').keypress(function(ev){						var mess = $(this).val().replace(/[<>/\\@\[\]\{\}\&\$|`~^#№%\(\)]/g, '');						setTimeout(function(){$('#content .chat input').val($('#content .chat input').val().replace(/[<>/\\@\[\]\{\}\&\$|`~^#№%\(\)]/g, ''))}, 0);						if(ev.keyCode == 13 && mess.length > 0 && mess.replace(/[ ]/g, '').length > 0){							if(avatars[0].chatTimer){								$('#content .chat .messages .m').append('<span class="fail">Сообщения можно отсылать не чаще одного раза в секунду!</span><br/>');								$('#content .chat .messages').mCustomScrollbar("scrollTo","bottom",{scrollInertia:0});							}							if(mess.length > 80){								$('#content .chat .messages .m').append('<span class="fail">Сообщение должно быть длиной не больше 80 символов!</span><br/>');								$('#content .chat .messages').mCustomScrollbar("scrollTo","bottom",{scrollInertia:0});							}							if(!avatars[0].chatTimer && mess.length <= 80){								sock.send($.toJSON({type: 'chat', text: mess}));								$(this).val('');								avatars[0].chatTimer = true;								setTimeout(function(){avatars[0].chatTimer = false}, 1000);							}						}					});					//события клавиатуры в поле секретного кода					$('#secretCode').click(function(){						if($(this).val() == 'Введите код и нажмите Enter'){							$(this).val('');						}					});					$('#secretCode').focusout(function(){						if($(this).val() == ''){							$(this).val('Введите код и нажмите Enter');						}					});					$('#secretCode').keyup(function(ev){						if(ev.keyCode == 13){							message('preloader', 'Проверка кода...');							sock.send($.toJSON({type: 'promo', code: $(this).val()}));							$(this).val('Введите код и нажмите Enter');						}					});					//турниры					turnir.w7 = avatars[0].win7;					turnir.w30 = avatars[0].win30;					//переход между типами турниров					$('.ratings .turnirName').click(function(){						avatars[0].curTurnir = turnir.turnirs[avatars[0].curTurnir+1] ? avatars[0].curTurnir+1 : 0;						setTurnirs(turnir.turnirs[avatars[0].curTurnir]);					});					//заявка на участие в турнире					$('.ratings .setTurnir').click(function(){						if(avatars[0].curTurnir == 1){							message('two', 'Для подачи заявки на участие в недельном турнире побед нужно заплатить 10 звёзд. Победы начнут считаться с момента подачи заявки. Продолжить?', 'Да', 'Нет');							$('#two .close, #two .but2').click(function(){message()});							$('#two .but1').click(function(){								if(avatars[0].stars < 10){									message('one', 'Недостаточн звёзд для участия в турнире', 'Получить звёзды');									message('one', msg.why, 'Получить звёзды');									$('#one .but').click(function(){																				$('#bank').click();										message();									});									$('#one .close').click(function(){message()});								}								else{									sock.send($.toJSON({type: 'setTurnir', num: avatars[0].curTurnir}));								}							});						}						if(avatars[0].curTurnir == 2){							message('two', 'Для подачи заявки на участие в месячном турнире побед нужно заплатить 50 звёзд. Победы начнут считаться с момента подачи заявки. Продолжить?', 'Да', 'Нет');							$('#two .close, #two .but2').click(function(){message()});							$('#two .but1').click(function(){								if(avatars[0].stars < 50){									message('one', 'Недостаточн звёзд для участия в турнире', 'Получить звёзды');									message('one', msg.why, 'Получить звёзды');									$('#one .but').click(function(){																				$('#bank').click();										message();									});									$('#one .close').click(function(){message()});								}								else{									sock.send($.toJSON({type: 'setTurnir', num: avatars[0].curTurnir}));								}							});						}					});					VK.addCallback('onOrderSuccess', function(orderId) {						if(avatars[0].buyRating == true){							avatars[0].buyRating = false;							sock.send($.toJSON({type: 'buyRatingOk', orderId: orderId}));						}						else if(avatars[0].buyTehnoTime == true){							avatars[0].buyTehnoTime = false;							sock.send($.toJSON({type: 'buyTehnoOk', orderId: orderId}));						}						else if(avatars[0].buyCube == true){							avatars[0].buyCube = false;							sock.send($.toJSON({type: 'buyCubeOk', orderId: orderId}));						}						else{							sock.send($.toJSON({type: 'buyStarsOk', orderId: orderId}));						}					});					VK.addCallback('onOrderCancel', function() {						if(avatars[0].buyRating == true){							avatars[0].buyRating = false;							sock.send($.toJSON({type: 'buyRatingCancel'}));						}						else if(avatars[0].buyTehnoTime == true){							avatars[0].buyTehnoTime = false;							sock.send($.toJSON({type: 'buyTehnoCancel'}));						}						else if(avatars[0].buyCube == true){							avatars[0].buyCube = false;							sock.send($.toJSON({type: 'buyCubeCancel'}));						}						else{							sock.send($.toJSON({type: 'buyStarsCancel'}));						}					});					VK.addCallback('onOrderFail', function() {						if(avatars[0].buyRating == true){							avatars[0].buyRating = false;							sock.send($.toJSON({type: 'buyRatingFail'}));						}						else if(avatars[0].buyTehnoTime == true){							avatars[0].buyTehnoTime = false;							sock.send($.toJSON({type: 'buyTehnoFail'}));						}						else if(avatars[0].buyCube == true){							avatars[0].buyCube = false;							sock.send($.toJSON({type: 'buyCubeFail'}));						}						else{							sock.send($.toJSON({type: 'buyStarsFail'}));						}					});					VK.addCallback('onRequestSuccess', function(){						message('one', 'Возврат рейтинга проведён успешно!', 'ОК');						$('#one .but, #one .close').click(function(){							sock.send($.toJSON({type: 'endWarOkRating'}));							message();						});					});					VK.addCallback('onRequestCancel', function(){						message('one', 'Возврат рейтинга отменён', 'ОК');						$('#one .but, #one .close').click(function(){							sock.send($.toJSON({type: 'endWarOk'}));							message();						});					});					VK.addCallback('onRequestFail', function(){						message('one', 'Возврат рейтинга отменён', 'ОК');						$('#one .but, #one .close').click(function(){							sock.send($.toJSON({type: 'endWarOk'}));							message();						});					});					//прокликивание для инициализации					$('#war').click();					$('#content .war .plane').click();					$('#content .planes .carousel img.default').click();					$('#content .shop .weapons .A').click();					//заполнение квестов					fillQuests(avatars[0].quests)					//восстановление топлива					avatars[0].gasInterval = setInterval(function(){						sock.send($.toJSON({type: 'gas'}));					}, 11000);					//заполнение технологий					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);					if(avatars[0].tehnoNum != 10){						avatars[0].tehnoInterval = setInterval(function(){							if(avatars[0].setTehnoTime(avatars[0].tehnoNum, avatars[0].tehnoTime, avatars[0].unixTime)){								sock.send($.toJSON({type: 'getTehno'}));							}							else{								avatars[0].unixTime -= 0;								avatars[0].unixTime += 61000;							}						}, 60000);						avatars[0].setTehnoTime(avatars[0].tehnoNum, avatars[0].tehnoTime, avatars[0].unixTime);					}					//канвасы для ПЕРЕЗАРЯДКИ оружия					wp_x = [35,95,155,215,485,545,605,665,35,95,155,215,485,545,605,665];					wp_canv = [];					for(var i = 0; i < weapons.all.length; i++){						wp_canv[weapons.all[i]] = [document.createElement('canvas')];						wp_canv[weapons.all[i]][1] = wp_canv[weapons.all[i]][0].getContext('2d');						wp_canv[weapons.all[i]][0].width = 50;						wp_canv[weapons.all[i]][0].height = 50;						wp_canv[weapons.all[i]][1].strokeStyle = i < 8 ? '#daa204' : '#a5cc0b';						wp_canv[weapons.all[i]][1].lineWidth = 4;						wp_canv[weapons.all[i]][0].id = 'cnv'+weapons.all[i];						canvases.appendChild(wp_canv[weapons.all[i]][0]);						wp_canv[weapons.all[i]][0].style.position = 'absolute';						wp_canv[weapons.all[i]][0].style.top = i < 8 ? 534 : 12;						wp_canv[weapons.all[i]][0].style.left = wp_x[i]-25;					}				break;				case 'turnirOk':					avatars[0].stars = msg.stars;					$('#stars span').html(msg.stars);					message('one', 'Заявка на участие в турнире успешно подана. Твоё имя появится в турнирной таблице в течении 30 минут.', 'OK');					$('#one .close, #one .but').click(function(){message()});					avatars[0].win7 = msg.w7;					avatars[0].win30 = msg.w30;					turnir.w7 = avatars[0].win7;					turnir.w30 = avatars[0].win30;					setTurnirs(turnir.turnirs[avatars[0].curTurnir]);				break;				case 'turnirCancel':					message('one','При подаче заявки произошла ошибка. Попробуйте обновить страницу и совершить покупку снова.','ОК');					$('#one .but, #one .close').click(function(){message()});				break;				case 'buyCancel':					message('one','При покупке произошла ошибка. Попробуйте обновить страницу и совершить покупку снова.','ОК');					$('#one .but, #one .close').click(function(){message()});				break;				case 'chat':					if($('.chat').css('display') == 'none'){						$('#chat').attr('style', 'color: #ffdc00');											}					$('#content .chat .messages .m').append('<span class="mestime">'+new Date().toLocaleTimeString()+'</span> <a href="https://vk.com/id'+((msg.id=='adm')?37350847:msg.id)+'" target = "_blank"><span class="mesname mesid'+msg.id+'">'+msg.name+':</span></a> <span class="'+((msg.id==avatars[0].id) ? 'mesyou' : 'mestext')+'">'+msg.message+'</span><br/>');					$('#content .chat .messages').mCustomScrollbar("scrollTo","bottom",{scrollInertia:0});				break;				case 'getTehno':					if(msg.tehno){						avatars[0].tehno = msg.tehno;						avatars[0].tehnoNum = 10;						avatars[0].tehnoTime = 0;						avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);						clearInterval(avatars[0].tehnoInterval);					}					else{						avatars[0].unixTime = msg.unixTime;											}				break;				case 'buy':					avatars[0].stars = msg.stars;					$('#stars span').html(msg.stars);					switch(msg.typeBuy){						case 'param':							avatars[0][msg.item] = msg.value;							$('#content .planes .carousel img.'+avatars[0].activePlane).click();							$('#content .war .wmk span.wkk'+avatars[0].planeMk).click();							var mes = '';							switch(msg.item){								case 'speed':									mes += 'скорость';								break;								case 'radius':									mes += 'манёвренность';								break;								case 'suspension':									mes += 'защиту';								break;								case 'damage':									mes += 'мощность оружия';								break;								case 'rate':									mes += 'скорость перезарядки';								break;							}							mes += ' своего самолёта';							message('one', 'Ты успешно увеличил '+mes, 'Рассказать друзьям');							$('#one .but').click(function(){wall(avatars[0].id, ('Я увеличил '+mes+' в игре Авиамясо! Померимся силами? http://vk.com/aviamyaso_online'))});							$('#one .close').click(function(){message()});						break;						case 'plane':							avatars[0].planes = msg.planes;							avatars[0].resources = msg.resources;							avatars[0].setResources(avatars[0].resources);							avatars[0].planesTrue.length = 0;							for(var i = 0; i < 6; i++){								if(avatars[0].planes[i]) avatars[0].planesTrue.push(weapons.planesArr[i]);							}							$('#content .planes .carousel img.'+avatars[0].activePlane).click();							message('one', 'Ты успешно приобрёл '+weapons[msg.item[0]][msg.item[1]].name+', Mk. '+['I','II','III'][msg.item[1]] ,'Рассказать друзьям');							$('#one .but').click(function(){wall(avatars[0].id, 'Я купил новый самолёт в игре Авиамясо! Померимся силами? http://vk.com/aviamyaso_online');sock.send($.toJSON({type: 'endWarOk'}));});							$('#one .close').click(function(){message();sock.send($.toJSON({type: 'endWarOk'}));});						break;						case 'weapon':											avatars[0].weapons[msg.item] = msg.value;							$('.weapons .'+msg.item+' .val span').html(msg.value);							message('one', 'Ты успешно приобрёл '+weapons[msg.item].buy.replace(/(Купить )(.*)(за 1 звезду)/, '$2'), 'ОК');							$('#one .but, #one .close').click(function(){message()});						break;						case 'wl':							avatars[0].wl[msg.item] = msg.wl;							avatars[0].resources = msg.resources;							avatars[0].setResources(avatars[0].resources);							$('.weapons .'+msg.item+' .valWL span').html(msg.wl);							$('#content .shop .weapons .'+msg.item).click();							message('one', 'Ты успешно улучшил оружие "'+weapons[msg.item].name+'" до модификации WL-'+msg.wl, 'ОК');							$('#one .but, #one .close').click(function(){message()});						break;						case 'tehnology':							avatars[0].resources = msg.resources;							avatars[0].tehnoNum = msg.tehnoTime[0];							avatars[0].tehnoTime = msg.tehnoTime[1];							avatars[0].unixTime = msg.unixTime;							avatars[0].setResources(avatars[0].resources);							message();							if(avatars[0].tehnoNum != 10){								avatars[0].tehnoInterval = setInterval(function(){									if(avatars[0].setTehnoTime(avatars[0].tehnoNum, avatars[0].tehnoTime, avatars[0].unixTime)){										sock.send($.toJSON({type: 'getTehno'}));									}									else{										avatars[0].unixTime -= 0;										avatars[0].unixTime += 61000;									}								}, 60000);								avatars[0].setTehnoTime(avatars[0].tehnoNum, avatars[0].tehnoTime, avatars[0].unixTime);							}						break;					}					avatars[0].prices();					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);				break;				case 'buyCubeOk':					avatars[0].stars = msg.stars;					avatars[0].resources = msg.resources;					$('#stars span').html(avatars[0].stars);					avatars[0].setResources(avatars[0].resources);					avatars[0].prices();					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);					message('one', 'При вскрытии куба в нём нашлось:<br/>Звёзды: '+msg.what[0]+'<br/>Металл: '+msg.what[1]+'<br/>Тротилл: '+msg.what[2]+'<br/>Кремний: '+msg.what[3]+'<br/>Алмазы: '+msg.what[4]+'<br/>', 'Продолжить');					$('#one .but, #one .close').click(function(){message()});				break;				case 'buyStarsOk':					avatars[0].stars = msg.val;					$('#stars span').html(msg.val);					if(msg.bnc == 1){message('one', 'Поздравляем! Ты оказался третьим игроком и получил в 2 раза больше звёзд!', 'Спасибо!');}					else{message('one', 'Покупка прошла успешно!', 'Продолжить');}					$('#one .but, #one .close').click(function(){message()});					avatars[0].prices();					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);				break;				case 'buyRatingOk':					$('#rating span').html(avatars[0].rating+'<b title = "Процент рейтинга, добавляемый за каждую победу"> +'+msg.rating+'%</b>');				break;				case 'buyTehnoOk':					avatars[0].tehnoNum = msg.tehnoTime[0];					avatars[0].tehnoTime = msg.tehnoTime[1];					avatars[0].unixTime = msg.unixTime;					avatars[0].tehno = msg.tehno;					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);					clearInterval(avatars[0].tehnoInterval);					if(avatars[0].tehnoNum != 10){						avatars[0].tehnoInterval = setInterval(function(){							if(avatars[0].setTehnoTime(avatars[0].tehnoNum, avatars[0].tehnoTime, avatars[0].unixTime)){								sock.send($.toJSON({type: 'getTehno'}));							}							else{								avatars[0].unixTime -= 0;								avatars[0].unixTime += 61000;							}						}, 60000);						avatars[0].setTehnoTime(avatars[0].tehnoNum, avatars[0].tehnoTime, avatars[0].unixTime);					}				break;				case 'turn': 					if(typeof(msg.ids) == 'object'){						turn.length = 0;						for(var i = 0; i < msg.ids.length; i++){							turn.push([msg.ids[i], msg.rating[i], msg.range[i], msg.names[i], msg.fotos[i]]);						}						i = null; delete i;					}					else{						turn.push([msg.ids, msg.rating, msg.range, msg.names, msg.fotos]);					}					turn.sort(function(a,b){return a[1]-b[1]});					if(msg.ids == avatars[0].id){	//id undefined						$('#inTurn .button').html('Выйти'); 					} 					$('#turn tr.id').remove();					for(var i = 0; i < turn.length; i++){						if(Math.abs(avatars[0].rating-turn[i][1]) < 5000){							if($('#turn .inviteFriend').length > 0){ 								$('#turn .inviteFriend').before('<tr class = "'+((turn[i][0] == avatars[0].id) ? 'you id' : 'id')+'"><td class = "foto"><a href = "http://vk.com/id'+turn[i][0]+'" target = "_blank"><img src = "'+turn[i][4]+'"></img></a></td><td><span class = "name">'+turn[i][3]+' </span> <span title = "Информация о сопернике" class = "getParamOpp id'+turn[i][0]+'"> &#9737;</span><br/>Рейтинг: <span class = "rating">'+turn[i][1]+'</span><br/>Ставка: <span class = "range" title = "Если выиграешь - заработаешь '+chislen(turn[i][2]*2, [' звезду',' звезды',' звёзд'])+'. Проиграешь - потеряешь '+chislen(turn[i][2], [' звезду',' звезды',' звёзд'])+'.">'+turn[i][2]+'</span><div class = "star"></div></td><td>'+((turn[i][0] == avatars[0].id) ? '' : '<div class = "button" id = "id'+turn[i][0]+'">Начать бой!</div>')+'</td></tr>');							}							else{								$('#turn').append('<tr class = "'+((turn[i][0] == avatars[0].id) ? 'you id' : 'id')+'"><td class = "foto"><a href = "http://vk.com/id'+turn[i][0]+'" target = "_blank"><img src = "'+turn[i][4]+'"></img></a></td><td><span class = "name">'+turn[i][3]+' </span> <span title = "Информация о сопернике" class = "getParamOpp id'+turn[i][0]+'"> &#9737;</span><br/>Рейтинг: <span class = "rating">'+turn[i][1]+'</span><br/>Ставка: <span class = "range" title = "Если выиграешь - заработаешь '+chislen(turn[i][2]*2, [' звезду',' звезды',' звёзд'])+'. Проиграешь - потеряешь '+chislen(turn[i][2], [' звезду',' звезды',' звёзд'])+'.">'+turn[i][2]+'</span><div class = "star"></div></td><td>'+((turn[i][0] == avatars[0].id) ? '' : '<div class = "button" id = "id'+turn[i][0]+'">Начать бой!</div>')+'</td></tr>');							}						}					}					if(turn.length == 0 || typeof(msg.ids) == 'object') wallF(avatars[0].fids,avatars[0].wallFriends,avatars[0].friendId);				break;				case 'turnirs':					turnir.rating.players = msg.rating;					turnir.win7.players = msg.win7;					turnir.win30.players = msg.win30;					turnir.rating.html = '';					turnir.win7.html = '';					turnir.win30.html = '';					var tt7 = [Math.floor(msg.t7/60/60/24), Math.floor(msg.t7/60/60)]; //1 - дни, 2 - часы					tt7[1] -= tt7[0]*24;					var tt30 = [Math.floor(msg.t30/60/60/24), Math.floor(msg.t30/60/60)]; //1 - дни, 2 - часы					tt30[1] -= tt30[0]*24;										turnir.update = msg.update;					turnir.rating.timeEnd = chislen(tt7[0], [' день',' дня',' дней'])+' '+chislen(tt7[1], [' час',' часа',' часов']);					turnir.win7.timeEnd = chislen(tt7[0], [' день',' дня',' дней'])+' '+chislen(tt7[1], [' час',' часа',' часов']);					turnir.win30.timeEnd = chislen(tt30[0], [' день',' дня',' дней'])+' '+chislen(tt30[1], [' час',' часа',' часов']);					var type = '';					for(var j = 0; j < 3; j++){						type = turnir.turnirs[j];						for(var i = 0; i < (turnir[type].players.length-1 < 13 ? 13 : turnir[type].players.length); i++){							if(turnir[type].players[i]){								if(turnir[type].players[i].id == 0){									turnir[type].players.splice(i,1);									i -= 1;								}								else{									var t = '';									if(type == 'rating') t = turnir[type].players[i].rating									else if(type == 'win7') t = turnir[type].players[i].win7									else t = turnir[type].players[i].win30;									if(turnir[type].players[i].id != avatars[0].id) turnir[type].html += '<tr class = "'+type+(i+1)+'"><td>'+(i+1)+'</td><td>'+turnir[type].players[i].name+'</td><td>'+t+'</td></tr>'									else turnir[type].html += '<tr class = "'+type+(i+1)+'"><td style="color:#0f0">'+(i+1)+'</td><td style="color:#0f0">'+turnir[type].players[i].name+'</td><td style="color:#0f0">'+t+'</td></tr>';								}							}							else{								turnir[type].html += '<tr><td></td><td></td><td></td></tr>';							}						}					}					turnir.w7 = avatars[0].win7;					turnir.w30 = avatars[0].win30;					setTurnirs(turnir.turnirs[avatars[0].curTurnir]);					$('.ratings .list .'+turnir.turnirs[avatars[0].curTurnir]+'1').click();				break;				case 'outTurn':					if(msg.id == avatars[0].id){						avatars[0].turn = false;						$('#inTurn .button').html('В очередь');						$('#turn .you').remove();					}					$('#id'+msg.id).parent().parent().remove();					for(var i = 0; i < turn.length; i++){						if(turn[i][0] == msg.id) turn.splice(i, 1);					}				break;				case 'initWar':					message('two', '<img style = "float: left; width: 50px; height: 50px;" src = "'+msg.foto+'"></img>'+msg.name+'<div class = "messagerating"></div>'+msg.rating+'<br/>хочет сразиться с тобой. Принять вызов?', 'ДА !', 'Нет');					$('#two .but1').click(function(){						sock.send($.toJSON({type: 'startWar'})); 						message('preloader', 'Ожидание ответа сервера...');					});					$('#two .but2, #two .close').click(function(){						sock.send($.toJSON({type: 'initWarCancel'})); 						message();					});				break;				case 'initWarCancel':					avatars[0].oppId = false;					msg.why2 = msg.why;					switch(msg.why){						case 'stars':							msg.why = 'Недостаточно звёзд для участия в этой битве. Попробуйте выбрать другого игрока или пополнить запас звёзд';							if($('#inTurn .button').html() == 'Ожидание...') $('#inTurn .button').html('В очередь')						break;						case 'gas':							msg.why = 'Для участия в битве в баке должно быть не меньше 10 литров топлива. Можно подождать окончания заправки или слить топливо у друзей';						break;						case 'no':							msg.why = 'Этот игрок уже в бою или вышел из игры. Попробуйте выбрать другого соперника.';						break;						case 'load':							msg.why = 'Этого игрока уже кто-то выбрал. Попробуйте выбрать другого соперника';						break;						case 'ratingMax':							msg.why = 'Твой рейтинг намного выше, чем у выбранного игрока. Выбери себе более опытного соперника...';						break;						case 'ratingMin':							msg.why = 'Твой рейтинг намного ниже, чем у выбранного игрока. Выбери себе менее опытного соперника...';						break;						default:							msg.why = 'Игрок отклонил вызов. Попробуйте выбрать другого...';					}					if(msg.why2 == 'stars'){						message('one', msg.why, 'Получить звёзды');						$('#one .but').click(function(){																	$('#bank').click();							message();						});						$('#one .close').click(function(){message();});					}					else if(msg.why2 == 'gas'){						message('two', msg.why, 'Слить у друзей', 'Ждать окончания заправки');						$('#two .but1').click(function(){							message();							$('#gas .getGas').click();						});						$('#two .but2, #two .close').click(function(){							message();						});					}					else{						message('one', msg.why, 'OK');						$('#one .but, #one .close').click(function(){message()});					}				break;				case 'initWarOkCancel':					message('one', 'Игрок отклонил вызов.', 'OK');					$('#one .but, #one .close').click(function(){message()});				break;				case 'endWar':					avatars[0].debaff = {						M: {per: 1, tper: 1},						E: {per: 1, tper: 1}					};					for(var i = 0; i < weapons.all.length; i++){						avatars[0].per[weapons.all[i]] = Date.now();		//время выстрела (наращивается с каждым кадром)						avatars[0].tper[weapons.all[i]] = Date.now();		//время окончания перезарядки					}					avatars[0].fallen = false;					avatars[0].oppId = false;					$('#learning').empty();					$('#nl').css('display','none').unbind('click');					document.getElementById('containerbody').style.background = 'none';					avatars[0].gasInterval = setInterval(function(){						sock.send($.toJSON({type: 'gas'}));					}, 11000)					//clearInterval(avatars[0].gameInterval);					avatars[0].cancelAnimFrame = true;					document.getElementById('particles').width = 700;					avatars[1] = null; delete avatars[1];					$(document).unbind('keyup');					$(document).unbind('keydown');					$('#warWeapons div, #particles').unbind('click'); 					for(var i = 0; i < weapons_0.length; i++){						weapons_0.splice(i,1);						i -= 1;					}					for(var i = 0; i < weapons_1.length; i++){						weapons_1.splice(i,1);						i -= 1;					}					for(var i = 0; i < lasers.length; i++){						lasers.splice(i,1);						i -= 1;					}					for(var i = 0; i < bonuses.length; i++){						if(bonuses[i].element) document.getElementById('bonuses').removeChild(bonuses[i].element);						bonuses.splice(i,1);						i -= 1;					}					turn = [];					weapons_0 = [];					weapons_1 = [];					particles = [];					lasers = [];					smoke = [];					avatars[0].time1 = 0;					avatars[0].time2 = 0;					avatars[0].time3 = 0;					switch(msg.why){						case 'kamikadze':							msg.message = 'Ты взорвал свой самолёт. Бой закончился вничью.';						break;						case 'kamikadzeWin':							msg.message = 'Соперник взорвал свой самолёт. Бой закончился вничью.';						break;						case 'fallen':							avatars[0].fallen = false;							avatars[0].stars -= msg.stars;							avatars[0].rating -= msg.rating;							if(msg.level) msg.message = 'Ты разбил свой самолёт об землю и проиграл! За проигрыш искусственному интеллекту ты не теряешь звёзд и рейтинга.'							else msg.message = 'Ты разбил свой самолёт об землю и проиграл!<br/>Потеряно рейтинга: '+msg.rating+'<br/>Потеряно звёзд: '+msg.stars;						break;						case 'fallenWin':							avatars[0].stars += msg.stars;							avatars[0].rating += msg.rating+msg.bonusRating;							if(msg.level) msg.message = 'Вражеский самолёт разбился об землю, ты победил искусственный интеллект '+(msg.level-1)+' уровня!<br/>Получено звёзд: '+msg.stars							else msg.message = 'Вражеский самолёт разбился об землю, ты выиграл!<br/>Получено рейтинга: '+msg.rating+((msg.bonusRating > 0) ? ('<br/><span class = "b"> + '+msg.bonusRating+' за медали</span>') : '')+'<br/>Получено звёзд: '+msg.stars;						break; 						case 'looser':							avatars[0].stars -= msg.stars;							avatars[0].rating -= msg.rating;							if(msg.level) msg.message = 'Ты проиграл в честной битве! За проигрыш искусственному интеллекту ты не теряешь звёзд и рейтинга.'							else msg.message = 'Ты проиграл в честной битве!<br/>Потеряно рейтинга: '+msg.rating+'<br/>Потеряно звёзд: '+msg.stars;						break;						case 'winner':							avatars[0].stars += msg.stars;							avatars[0].rating += msg.rating+msg.bonusRating;							if(msg.level) msg.message = 'Ты победил искуственный интеллект '+(msg.level-1)+' уровня!<br/>Получено звёзд: '+msg.stars							else msg.message = 'Ты победил в честной битве!<br/>Получено рейтинга: '+msg.rating+((msg.bonusRating > 0) ? ('<br/><span class = "b"> + '+msg.bonusRating+' за медали</span>') : '')+'<br/>Получено звёзд: '+msg.stars;						break;						case 'disconnectOpponent':							msg.message = 'Соперник вышел из игры. Всё топливо и боеприпасы будут возвращены.';							avatars[0].weapons = msg.weapons;							avatars[0].gas += 10;							clearInterval(avatars[0].gasInterval);						break;					}					avatars[0].life = 100;					avatars[0].gas -= 10; 					if(avatars[0].gas < 0) avatars[0].gas = 0;					if(avatars[0].stars < 0) avatars[0].stars = 0;					if(avatars[0].rating < 0) avatars[0].rating = 0;					if(msg.level){						avatars[0].levelBot = msg.level;						if(avatars[0].levelBot >= 0){							$('#botGame .name').html('Исскуственный<br/>интеллект');						}						$('#botGame .lv').html(avatars[0].levelBot);					}					$('#gas span').html(avatars[0].gas);					//$('#life2 span').html(avatars[0].life);					avatars[0].setLife();					$('#rating span, #inTurn .rating').html(avatars[0].rating);					$('#stars span').html(avatars[0].stars);					avatars[0].prices();					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);					avatars[0].setResources(avatars[0].resources);					$('#warWeapons .weapons > div').removeClass('not');					for(var i = 0; i < weapons.all.length; i++){						avatars[0].per[weapons.all[i]] = Date.now();						avatars[0].tper[weapons.all[i]] = Date.now();					}					$('.interface').css('display', 'block');					$('.gameInterface').css('display', 'none');					$('#info tr td.imaGas').css('display', 'block');					if(!msg.level && msg.why != 'disconnectOpponent'){						if(!msg.level && (msg.why=='looser'||msg.why=='fallen')){							armessages.message = msg.message+'<br/>Чтобы не потерять рейтинг и звёзды, отправь другу подарок!';							armessages.message2 = 'Возврат рейтинга и звёзд проведён успешно!';							armessages.message3 = 'Не удалось разместить запись. Возврат рейтинга и звёзд отменён.';							armessages.message4 = false;						}						else if(msg.why!='looser'||msg.why!='fallen'){							armessages.message = msg.message+'<br/>Ты можешь удвоить полученный рейтинг, если отправишь другу подарок!';							armessages.message2 = 'Удваивание рейтинга прошло успешно!';							armessages.message3 = 'Не удалось разместить запись. Удваивание рейтинга отменено.';							armessages.message4 = true;						}						message('one', armessages.message, 'Отправить подарок');						$('#one .but').click(function(){							VK.api('friends.get', {https: 1, count: 1, order: 'random'}, function(response){								if(response.response[0] > 0){									VK.api('photos.getWallUploadServer', {https: 1}, function (data) {										$.post('upload.php', {'uploadUrl': data.response.upload_url, type: 'plane'}, function(data) {											var upload = $.parseJSON(data);											VK.api('photos.saveWallPhoto', {'hash': upload.hash, 'photo': upload.photo, 'server': upload.server, 'uid': response.response[0], 'gid': '', https: 1}, function (data) {												if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};												var brd = response.response[0]+'bonus'+Math.round(Math.random()*1000000);												VK.api('wall.post', {message: 'Спасибо за помощь! =) Вот тебе за это подарок от меня! Введи в банке секретный код '+brd+' и получи валюту! http://vk.com/aviamyaso_online', attachments: data.response[0].id+',http://vk.com/aviamyaso_online', https: 1, owner_id: response.response[0]}, function(data){													$('#vk_ads_4726').css('display', 'block');													message('preloader', 'Сохранение результатов');													setTimeout(function(){														if(data.response){															message('one', armessages.message2, 'ОК');															$('#one .but, #one .close').click(function(){																sock.send($.toJSON({type: ((!armessages.message4)?'endWarOkRating':'endWarOkRatingPlus'),brd:brd}));																message();															});														}														else{															message('one', armessages.message3, 'ОК'); 															$('#one .but, #one .close').click(function(){																sock.send($.toJSON({type: 'endWarOk'}));																message();															});														}														$('#vk_ads_4726').css('display', 'none');													}, 7000);												})											})										});									});								}								else{									message('one', 'К сожалению, сейчас у тебя нет друзей, которые могут помочь =(', 'ОК');									$('#one .close, #one .but').click(function(){										$('#vk_ads_4726').css('display', 'block');										message('preloader', 'Сохранение результатов');										setTimeout(function(){											if(msg.level){												message('one', 'В следующий раз попробуй сыграть с другом, это гораздо интересней!', 'Пригласить друзей');												$('#one .but').click(function(){													if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};													VK.callMethod('showInviteBox');													sock.send($.toJSON({type: 'endWarOk'}));													message();												});												$('#one .close').click(function(){													sock.send($.toJSON({type: 'endWarOk'}));													message();												});											}											else{												sock.send($.toJSON({type: 'endWarOk'}));												message();											}											$('#vk_ads_4726').css('display', 'none');										}, 7000);									});								}							});						});						$('#one .close').click(function(){							$('#vk_ads_4726').css('display', 'block');							message('preloader', 'Сохранение результатов');							setTimeout(function(){								if(msg.level){									message('one', 'В следующий раз попробуй сыграть с другом, это гораздо интересней!', 'Пригласить друзей');									$('#one .but').click(function(){										if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};										VK.callMethod('showInviteBox');										sock.send($.toJSON({type: 'endWarOk'}));										message();									});									$('#one .close').click(function(){										sock.send($.toJSON({type: 'endWarOk'}));										message();									});								}								else{									sock.send($.toJSON({type: 'endWarOk'}));									message();								}								$('#vk_ads_4726').css('display', 'none');							}, 7000);						});					}					else{						message('one', msg.message, 'ОК');						$('#one .close, #one .but').click(function(){							$('#vk_ads_4726').css('display', 'block');							message('preloader', 'Сохранение результатов');							setTimeout(function(){								if(msg.level && msg.why != 'disconnectOpponent'){																	message('one', 'В следующий раз попробуй сыграть с другом, это гораздо интересней!', 'Пригласить друзей');									$('#one .but').click(function(){										if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()};										VK.callMethod('showInviteBox');										sock.send($.toJSON({type: 'endWarOk'}));										message();									});									$('#one .close').click(function(){										sock.send($.toJSON({type: 'endWarOk'}));										message();									});								}								else{									sock.send($.toJSON({type: 'endWarOk'}));									message();								}								$('#vk_ads_4726').css('display', 'none');							}, 7000);						});					}				break;				case 'promo':					message('one','Вы успешно активировали серетный код и получили дополнительно 10 звёзд!','ОК');					$('#secretCode').val();					avatars[0].stars = msg.stars;					$('#stars span').html(avatars[0].stars);					$('#one .but, #one .close').click(function(){message()});				break;				case 'superPromo':					message('one','Вы успешно активировали серетный код и получили дополнительно 30 звёзд!','ОК');					$('#secretCode').val();					avatars[0].stars = msg.stars;					$('#stars span').html(avatars[0].stars);					$('#one .but, #one .close').click(function(){message()});				break;				case 'cancelPromo':					message('one','Секретный код введён неверно или предназначан не для Вас!','ОК');					$('#one .but, #one .close').click(function(){message()});				break;				case 'gas':					avatars[0].gas = msg.gas;					if(avatars[0].gas >= 100){						avatars[0].gas = 100;						clearInterval(avatars[0].gasInterval);					}					$('#gas span').html(avatars[0].gas);				break;				case 'getParamOpp':					if(msg.params){						var mes = '<p style = "font-size: 15px">';						for(var i = 0; i < weapons.hacked.length; i++){							if(msg.params[i]){								if(i >= 2 && i <= 6) msg.params[i] *= 10;								if(i == 9) msg.params[i] = weapons[msg.params[i]][0].name;															}							if(i == 10 && msg.params[i] >= 0){msg.params[i] -= 0; msg.params[i] += 1;}							mes += weapons.hacked[i]+(msg.params[i] ? msg.params[i]+'  <br/>' : ' неизвестно<br/>');						}						message('one', mes+'</p>', 'OK');						$('#one .but, #one .close').click(function(){message()});					}					else{						message('one', 'Не удалось взломать систему противника', 'OK');						$('#one .but, #one .close').click(function(){message()});					}				break;				case 'startWar':					clearInterval(avatars[0].gasInterval);					message();					ctx.font = '35px Cuprum bold';					ctx.textBaseline = 'middle';					ctx.textAlign = 'center';					ctx.fillStyle = '#ff4808';					ctx.strokeStyle = '#ff0000';					var ver = function(tw, nolog){						tw = tw.replace(' not', '');						if(!tw){							return false;						}						if(avatars[0].per[tw] < avatars[0].tper[tw]){;							if(!nolog)particles.push(new Effect({type: 'message', x: 350, y: 300, text: 'Перезарядка...', t: 2000}));							return false;						}						if(!weapons[avatars[0].plane][avatars[0].planeMk].weaponsNI[tw] && weapons.weaponsNI[tw]){							if(!nolog)particles.push(new Effect({type: 'message', x: 350, y: 300, text: 'Оружие недоступно на этом самолёте !', t: 2000}));							return false;						}						if(!weapons[avatars[0].plane][avatars[0].planeMk].bonusesNI[tw] && weapons.bonusesNI[tw]){							if(!nolog)particles.push(new Effect({type: 'message', x: 350, y: 300, text: 'Бонус недоступен на этом самолёте !', t: 2000}));							return false;						}						if(avatars[0].weapons[tw] <= 0){							avatars[0].weapons[tw] = 0;							if(!nolog)particles.push(new Effect({type: 'message', x: 350, y: 300, text: 'Закончились боеприпасы !', t: 2000}));							return false;						}						if(avatars[0].hot + (weapons[tw].hot/3)+(weapons[tw].hot/avatars[0].tehno[4]) > 100){							particles.push(new Effect({type: 'message', x: 350, y: 300, text: 'Перегрев !', t: 2000}));							return false;						}						return true;					}					avatars[1] = new Avatar(msg.parOpp);					avatars[1].game(msg.parOpp);					avatars[0].game(msg.parGame);					avatars[0].imagePng.onload = function(){						avatars[0].imagectx.drawImage(avatars[0].imagePng, 0, 0);					}					avatars[1].imagePng.onload = function(){						avatars[1].imagectx.drawImage(avatars[1].imagePng, 0, 0);					}					avatars[1].time1 = 0;					avatars[1].time2 = 0;					avatars[1].time3 = 90;					avatars[0].time4 = 0;					avatars[0].time5 = 0;					avatars[0].time6 = 0;					avatars[0].timeRT0 = 0;					avatars[1].learning = [0,0];					avatars[0].clickWeapon = 0;					avatars[0].regen = 0;					avatars[0].superSpeed = 5000;					avatars[1].superSpeed = 5000;					avatars[0].superSpeedW = 200;					//avatars[0].superSpeedT = 0;					avatars[0].hot = 0;					if(avatars[0].oppId == 'computer'){						avatars[1].weapons = msg.parOpp.weapons;						avatars[1].all = msg.parOpp.all;						avatars[1].foto = msg.parOpp.foto;						avatars[1].y = 451;						avatars[1].debafE = 0;						avatars[1].debafF = 0;						if(avatars[0].levelBot == 0){							$('#nl').css('display','block').click(function(){								avatars[1].learning[0] = 15;								avatars[1].learning[1] = 0;								avatars[1].time2 = 90;								avatars[1].time3 = 1000;								$('#learning').empty();								$(this).css('display','none').unbind('click');							});						}					} 					else if(avatars[0].levelBot == 0){						$('#learning').html('УПРАВЛЕНИЕ САМОЛЁТОМ:<br/>'+weapons.keySet[avatars[0].keys[16]]+' - ВВЕРХ, '+weapons.keySet[avatars[0].keys[17]]+' - ВНИЗ<br/>ДЛЯ ВЫСТРЕЛА МОЖНО БЫСТРО<br/>КЛИКАТЬ В ЛЮБОМ МЕСТЕ ЭКРАНА,<br/>ПРИ ЭТОМ ВЫСТРЕЛ БУДЕТ ПРОИЗВЕДЕН ОДНИМ ИЗ 4 ОСНОВНЫХ<br/>ВИДОВ ОРУЖИЯ, КОТОРОЕ ЕСТЬ В НАЛИЧИИ И ПЕРЕЗАРЯЖЕНО.<br/>ИЛИ ПРОСТО КЛИКАТЬ ПО ИКОНКАМ С ОРУЖИЕМ.');						setTimeout(function(){$('#learning').empty();}, 20000);					}					$('.interface').css('display', 'none');					$('.gameInterface').css('display', 'block');					document.getElementById('containerbody').style.background = 'url(images/bg.jpg)';					for(var i = 0; i < weapons.all.length; i++){						if(weapons[avatars[0].plane][avatars[0].planeMk].weaponsNI[weapons.all[i]] || weapons[avatars[0].plane][avatars[0].planeMk].bonusesNI[weapons.all[i]]){													}						else{							$('#warWeapons .weapons > div.'+weapons.all[i]).addClass('not');													}						particles.push(new Effect({type: 'per', typeW: weapons.all[i]}));					}					$(document).keydown(function(ev){						//VK.callMethod('scrollWindow', {top: 40, speed: 0});						if(!avatars[0].key){							switch(ev.keyCode){								case avatars[0].keys[16]:									avatars[0].key = 'up';								break;								case avatars[0].keys[17]:									avatars[0].key = 'down';								break;							}							if(avatars[0].debaff.E.per < avatars[0].debaff.E.tper && !avatars[0].keyFlag){								particles.push(new Effect({type: 'message', text: 'Управление заблокировано!', x: 350, y: 300, t: 1000}));								avatars[0].key = false;							}							else if((ev.keyCode == avatars[0].keys[16] || ev.keyCode == avatars[0].keys[17]) && !avatars[0].keyFlag&& avatars[0].oppId != 'computer'){								sock.send($.toJSON(avatars[0].getCorrect(1)));								avatars[0].keyFlag = true;							}						}						if(ev.keyCode == 16 && !avatars[0].shift && avatars[0].superSpeed > 500){							avatars[0].shift = true;							sock.send($.toJSON(avatars[0].getCorrect(1)));						}					});					$(document).keyup(function(ev){						//VK.callMethod('scrollWindow', {top: 40, speed: 0});						if(ev.keyCode == avatars[0].keys[16] || ev.keyCode == avatars[0].keys[17]){							avatars[0].key = false;							if(avatars[0].keyFlag == true && avatars[0].oppId != 'computer'){								sock.send($.toJSON(avatars[0].getCorrect(0)));								avatars[0].keyFlag = false;							}						}						else if(ev.keyCode == 16 && avatars[0].shift){							avatars[0].shift = false;							sock.send($.toJSON(avatars[0].getCorrect(0)));						}					});					$('#warWeapons > div > div, #particles'/*, #superSpeed'*/).click(function(){						/*if($(this).attr('id') == 'superSpeed'){							if(avatars[0].superSpeed+10000 < Date.now()){								sock.send($.toJSON({type:'superSpeed'}));							}							else{								particles.push(new Effect({type: 'message', x: 350, y: 300, text: 'Перезарядка...', t: 2000}));							}						}						else{*/							var tw;							if(this.id == 'particles'){								avatars[0].clickWeapon = 0;								tw = weapons.all[avatars[0].clickWeapon];								for(var i = 0; i <= 3; i++){									if(ver(weapons.all[i], true)){										avatars[0].clickWeapon = i;										tw = weapons.all[avatars[0].clickWeapon];									}								}								if(ver(tw, true)) sock.send($.toJSON({type:'shot',x:avatars[0].x.toFixed(4)-0,y:avatars[0].y.toFixed(4)-0,a:avatars[0].ra.toFixed(4)-0,koef:avatars[0].koef,typeW:tw,side:avatars[0].sideName}));							}							else{								tw = this.className;														if(ver(tw, false)) sock.send($.toJSON({type:'shot',x:avatars[0].x.toFixed(4)-0,y:avatars[0].y.toFixed(4)-0,a:avatars[0].ra.toFixed(4)-0,koef:avatars[0].koef,typeW:tw,side:avatars[0].sideName}));							}						//}					});					if(avatars[0].oppId == 'computer'){						avatars[1].per = {};						avatars[1].tper = {};						for(var i = 0; i < weapons.all.length; i++){							avatars[1].per[weapons.all[i]] = Date.now();		//время выстрела (наращивается с каждым кадром)							avatars[1].tper[weapons.all[i]] = Date.now();		//время окончания перезарядки						}						for(var i = 0; i < avatars[1].all.length; i++){							if(!weapons[avatars[1].plane][avatars[0].planeMk].weaponsNI[avatars[1].all[i]] && weapons.weaponsNI[avatars[1].all[i]]){								avatars[1].all.splice(i,1);								i -= 1;							}						}					}					//старт отрисовки					avatars[0].gameInterval = function(rt){						if(!avatars[0].cancelAnimFrame){						//console.log(rt)						//0time - время старта кадра						//0time2 - время отрисовки кадра						//0time3 - для корректировки						//0time4 - подсчет кадров для вычисления среднего времени кадра						ctx.clearRect(0,0,700,600); 												avatars[0].timeRT1 = rt-avatars[0].timeRT0;						avatars[0].timeRT0 = rt;						avatars[0].time = window.performance.now();						avatars[0].time6 = window.performance.now();						//проверка на падение						if(avatars[0].y > 570 && !avatars[0].fallen){							avatars[0].fallen = true;							sock.send($.toJSON({type: 'hit', typeW: 'fallen'}));						}						//проверка компьютера на падение						if(avatars[0].oppId == 'computer' && avatars[1].y > 570 && !avatars[1].fallen){							avatars[1].fallen = true;							sock.send($.toJSON({type: 'hit', typeW: 'fallen', bot: 1}));						}						//проверка попадания компьютера						for(var i = 0; i < weapons_0.length; i++){							if(weapons_0[i].draw({t:avatars[0].time2, tr:avatars[0].timeRT1, x:avatars[0].x, y:avatars[0].y, ra:avatars[0].ra}) == 'coordLimit'){								weapons_0.splice(i,1);							}							else if(avatars[0].oppId == 'computer' && weapons_0[i].s && Math.abs(avatars[1].x-weapons_0[i].x) < 80 && Math.abs(avatars[1].y-weapons_0[i].y) < 80){								var dl = Math.sqrt(((avatars[1].x-weapons_0[i].x)*(avatars[1].x-weapons_0[i].x))+((avatars[1].y-weapons_0[i].y)*(avatars[1].y-weapons_0[i].y)));								if(dl < (avatars[1].w/4+weapons_0[i].w/4)+weapons_0[i].hit){									sock.send($.toJSON({type: 'hit', typeW: weapons_0[i].typeW, i: i, bot: 1}));									weapons_0.splice(i,1);								};							}						}						//проверка попадания с живым игроком						for(var i = 0; i < weapons_1.length; i++){							if(weapons_1[i].draw({t:avatars[0].time2, tr:avatars[0].timeRT1, x:avatars[0].x, y:avatars[0].y, ra:avatars[0].ra}) == 'coordLimit'){								weapons_1.splice(i,1);							}							else if(weapons_1[i].s && Math.abs(avatars[0].x-weapons_1[i].x) < 80 && Math.abs(avatars[0].y-weapons_1[i].y) < 80){								var dl = Math.sqrt(((avatars[0].x-weapons_1[i].x)*(avatars[0].x-weapons_1[i].x))+((avatars[0].y-weapons_1[i].y)*(avatars[0].y-weapons_1[i].y)));								if(dl < (avatars[0].w/4+weapons_1[i].w/4)+weapons_1[i].hit){									sock.send($.toJSON({type: 'hit', typeW: weapons_1[i].typeW, i: i}));									weapons_1.splice(i,1);								};							}						}						//просчет игрока 1 и 2						avatars[0].draw(avatars[0].time2,avatars[0].timeRT1);						avatars[1].draw(avatars[0].time2,avatars[0].timeRT1);						if(avatars[0].superSpeed < 100 && avatars[0].shift){							avatars[0].shift = false;							sock.send($.toJSON(avatars[0].getCorrect(1)));						}						//отрисовка эффектов						for(var i = 0; i < particles.length; i++){							if(avatars[0].oppId == 'computer' && particles[i].side == 1 && particles[i].typeW == 'E'){								avatars[1].debafE = 1;							}							else{								avatars[1].debafE = 0;							}							if(avatars[0].oppId == 'computer' && particles[i].side == 1 && particles[i].typeW == 'F'){								avatars[1].debafF = 1;							}							else{								avatars[1].debafF = 0;							}							if(particles[i].draw({t: avatars[0].time2, tr:avatars[0].timeRT1, per: avatars[0].per[particles[i].type], tper: avatars[0].tper[particles[i].type], x:avatars[0].x, y:avatars[0].y, ra:avatars[0].ra, x1:avatars[1].x, y1:avatars[1].y, ra1:avatars[0].ra}) == 'off'){								particles.splice(i, 1);								i -= 1;							}						}						//отрисовка оружия						for(var i = 0; i < lasers.length; i++){							if(lasers[i].draw({t:avatars[0].time2, tr:avatars[0].timeRT1, x:avatars[0].x, y:avatars[0].y, ra:avatars[0].ra, x1:avatars[1].x, y1:avatars[1].y, ra1:avatars[0].ra}) == 'off'){								lasers.splice(i,1);								i -= 1;							}						}						//отрисовка дыма						for(var i = 0; i < smoke.length; i++){							if(smoke[i].draw(avatars[0].time2,avatars[0].timeRT1) == 'off'){								smoke.splice(i,1);								if(smoke[i]) smoke[i].draw(avatars[0].time2,avatars[0].timeRT1);							}						}						//отрисовка бонусов						for(var i = 0; i < bonuses.length; i++){							if(bonuses[i] && Math.abs(avatars[0].x-bonuses[i].x) < 50 && Math.abs(avatars[0].y-bonuses[i].y < 50)){								var dl = Math.sqrt(((avatars[0].x-bonuses[i].x)*(avatars[0].x-bonuses[i].x))+((avatars[0].y-bonuses[i].y)*(avatars[0].y-bonuses[i].y)));								if(dl < (avatars[0].w/4+5)+5){									if(bonuses[i].element) document.getElementById('bonuses').removeChild(bonuses[i].element);									sock.send($.toJSON({type: 'bonus', typeB: bonuses[i].typeB, i: i}));									bonuses.splice(i, 1);								};							}						} 						//добавление дыма						if(avatars[0].life < 65 && avatars[0].time2 < 10){							smoke.push(new Effect({life:avatars[0].life, x:avatars[0].x, y:avatars[0].y, type:'smoke'}));						}						if(avatars[1].life < 65 && avatars[0].time2 < 10){							smoke.push(new Effect({life:avatars[1].life, x:avatars[1].x, y:avatars[1].y, type:'smoke'}));						}						//проверка на отражение						if(avatars[0].debaff.M.per > avatars[0].debaff.M.tper){							avatars[0].debaff.M.per = 1;							avatars[0].debaff.M.tper = 1;							avatars[1].opacity = 1;						}						//автоаптечка если уровень технологии ИИ 3+						if(avatars[0].tehno[4] >= 3 && avatars[0].weapons.I > 0 && avatars[0].life <= 30 && avatars[0].per.I >= avatars[0].tper.I){							sock.send($.toJSON({type:'shot',x:avatars[0].x.toFixed(4)-0,y:avatars[0].y.toFixed(4)-0,a:avatars[0].ra.toFixed(4)-0,koef:avatars[0].koef.toFixed(4)-0,typeW:'I',side:avatars[0].sideName}));						}						//отрисовка компьютером себя, проверка оружия и т.д.						if(avatars[0].oppId == 'computer'){							var x = Math.abs(avatars[0].x-avatars[1].x);							var y = Math.abs(avatars[0].y-avatars[1].y);							var gp = Math.sqrt((x*x)+(y*y));							var rad = avatars[1].ra*Math.PI/180;							var prom;							if(avatars[0].x < avatars[1].x && avatars[0].y < avatars[1].y) prom = Math.asin(y/gp)+rad							else if(avatars[0].x > avatars[1].x && avatars[0].y < avatars[1].y) prom = (Math.PI/2)-Math.asin(y/gp)+rad+(Math.PI/2)							else if(avatars[0].x > avatars[1].x && avatars[0].y > avatars[1].y) prom = Math.asin(y/gp)+rad+Math.PI							else if(avatars[0].x < avatars[1].x && avatars[0].y > avatars[1].y) prom = (Math.PI/2)-Math.asin(y/gp)+rad+(Math.PI*1.5);							var sin = Math.sin(prom);							var cos = Math.cos(prom);							avatars[1].time1 -= 40;							avatars[1].time2 -= 40;							avatars[1].time3 -= 40;							if(avatars[1].time2 <= 0 && avatars[0].levelBot == 0 && avatars[1].time3 <= 0){								if(weapons.learning[avatars[1].learning[0]]){									if(weapons.learning[avatars[1].learning[0]][avatars[1].learning[1]] == '^') $('#learning').append('<br/>')									else $('#learning').append(weapons.learning[avatars[1].learning[0]][avatars[1].learning[1]]);									avatars[1].learning[1] += 1;									avatars[1].time3 = 90;									if(avatars[1].learning[1] >= weapons.learning[avatars[1].learning[0]].length){										avatars[1].learning[1] = 0;										avatars[1].learning[0] += 1;										avatars[1].time2 = 1000;										$('#learning').empty();									}								}							}							if(weapons.learning[avatars[1].learning[0]] && avatars[0].levelBot == 0){avatars[1].x = -800}							else if(avatars[1].debafE === 0){								if(avatars[1].debafF === 0 && avatars[0].opacity > 0.9){									if(sin > 0.02){										if(avatars[1].time1 <= 0){avatars[1].key = 'up'; avatars[1].time1 = 100/avatars[1].wradius}									}									else if(sin <= 0.02 && sin >= -0.02){										if(avatars[1].time1 <= 0){avatars[1].key = false; avatars[1].time1 = 100/avatars[1].wradius}									}									else if(sin < -0.02){										if(avatars[1].time1 <= 0){avatars[1].key = 'down'; avatars[1].time1 = 100/avatars[1].wradius}									}								}								if(avatars[1].y > 500){									if(Math.cos(rad) >= 0){avatars[1].key = 'up'; avatars[1].time1 = 100/avatars[1].wradius}									else{avatars[1].key = 'down'; avatars[1].time1 = 100/avatars[1].wradius}								}								if(avatars[1].weapons.I > 0 && avatars[1].life <= ((avatars[1].weapons.I*10>80)?80:avatars[1].weapons.I) && avatars[0].life >= 50-avatars[0].levelBot && avatars[1].per.I >= avatars[1].tper.I){									sock.send($.toJSON({type:'shot',x:avatars[1].x.toFixed(4)-0,y:avatars[1].y.toFixed(4)-0,a:avatars[1].ra.toFixed(4)-0,koef:avatars[1].koef,typeW:'I',side:avatars[1].sideName,bot: 1}));									avatars[1].weapons.I -= 1;								}								if(avatars[1].weapons.J > 0 && avatars[1].life <= 50 && avatars[1].per.J >= avatars[1].tper.J){									sock.send($.toJSON({type:'shot',x:avatars[1].x,y:avatars[1].y,a:avatars[1].ra,koef:avatars[1].koef,typeW:'J',side:avatars[1].sideName,bot: 1}));									avatars[1].weapons.J -= 1;								}								for(var i = 0; i < avatars[1].all.length; i++){									avatars[1].per[avatars[1].all[i]] += 40;									if((sin <= 0.035 && sin >= -0.035 || (sin <= 0.3 && sin >= -0.3 && gp < 30) || gp < 15)&&(avatars[1].per[avatars[1].all[i]] >= avatars[1].tper[avatars[1].all[i]])&&(avatars[1].weapons[avatars[1].all[i]] > 0 && avatars[1].all[i] != 'I' && avatars[1].all[i] != 'J')){										sock.send($.toJSON({type:'shot',x:avatars[1].x.toFixed(4)-0,y:avatars[1].y.toFixed(4)-0,a:avatars[1].ra.toFixed(4)-0,koef:avatars[1].koef,typeW:avatars[1].all[i],side:avatars[1].sideName,bot: 1}));										avatars[1].weapons[avatars[1].all[i]] -= 1;									}								}							}							avatars[1].debafE = 0;							avatars[1].debafF = 0;							avatars[1].debafM = 0;						}						//корректировка координат						if(avatars[0].time3 >= 1500 && avatars[0].oppId != 'computer'){							//sock.send($.toJSON(avatars[0].getCorrect()));							avatars[0].time3 = 0;												}						//просчет времени отрисовки всего кадра						avatars[0].time2 = window.performance.now()-avatars[0].time;						avatars[0].time5 += window.performance.now() - avatars[0].time6;						//console.log(window.performance.now() - avatars[0].time6);						avatars[0].time4+=1;						if(avatars[0].time4 > 100){							console.log(avatars[0].time5/avatars[0].time4);							avatars[0].time5 =0;							avatars[0].time4 =0;						}						//регенерация (технология материала)						avatars[0].regen += avatars[0].timeRT1;						if(avatars[0].regen >= avatars[0].regenTime){							sock.send($.toJSON({type: 'regen'}));							avatars[0].regen = 0;						}						avatars[0].time3 += avatars[0].timeRT1;						requestAnimFrame(avatars[0].gameInterval, document.getElementById('particles'));						}					};					avatars[0].cancelAnimFrame = false;					requestAnimFrame(avatars[0].gameInterval, document.getElementById('particles'));				break;				case 'correct':					avatars[1].setCorrect(msg);					avatars[0].pinger = msg.ping;				break;				case 'shot':					//если выстрел от себя					if(msg.side == avatars[0].sideName){						//если это оружие, добавляем ракету на поле и добавляем перегрев						if(weapons.weaponsNI[msg.typeW]){							weapons_0.push(new Rocket(msg,avatars[1].x,avatars[1].y));							avatars[0].hot += msg.hot*2;						}						//иначе добавляем эффект бонуса						else{							lasers.push(new Effect({type: msg.typeW, per: msg.per, koef: avatars[0].koef, side: 0}));						}						//меняем счетчик патронов						avatars[0].weapons[msg.typeW] = msg.val;						$('.weapons .'+msg.typeW+' .val span').html(avatars[0].weapons[msg.typeW]);						//время перезарядки и анимация						avatars[0].per[msg.typeW] = Date.now();						avatars[0].tper[msg.typeW] = Date.now()+msg.per;						particles[weapons[msg.typeW].index].per = avatars[0].per[msg.typeW];						particles[weapons[msg.typeW].index].tper = avatars[0].tper[msg.typeW];						//если бонус						switch(msg.typeW){							case 'I':								avatars[0].life = msg.life;								//$('#life2 span').html(msg.life);								avatars[0].setLife();								particles.push(new Effect({type: 'message', text: ('+10 HP'), x: 350, y: 250, t: 1000}));							break;							case 'J':								particles.push(new Effect({type: 'message', text: ('Щит активирован!'), x: 350, y: 250, t: 2000}));							break;							case 'K':								particles.push(new Effect({type: 'message', text: ('Лазерный приицел активирован!'), x: 350, y: 250, t: 2000}));							break;							case 'L':								//sock.send($.toJSON({type: 'hit', typeW: 'kamikadze'}));								avatars[0].x = (avatars[0].sideName == 'left') ? 40 : 660;										avatars[0].y = 450;								avatars[0].s = avatars[0].wspeed;								avatars[0].r = avatars[0].s*50/avatars[0].wradius;								avatars[0].cosa = (avatars[0].r*avatars[0].r+avatars[0].r*avatars[0].r-avatars[0].s*avatars[0].s)/(2*avatars[0].r*avatars[0].r);								avatars[0].a = 0;								avatars[0].ra = avatars[0].a;								sock.send($.toJSON(avatars[0].getCorrect()));								particles.push(new Effect({type: 'message', text: ('Телепорт сработал успешно!'), x: 350, y: 250, t: 2000}));							break;							case 'M':								particles.push(new Effect({type: 'message', text: ('Генератор невидимости активирован!'), x: 350, y: 250, t: 2000}));							break;							case 'N':								particles.push(new Effect({type: 'message', text: ('Отражатель активирован!'), x: 350, y: 250, t: 2000}));							break;							case 'O':								particles.push(new Effect({type: 'message', text: ('Антинаведение активировано!'), x: 350, y: 250, t: 2000}));							break;							case 'P':								particles.push(new Effect({type: 'message', text: ('Быстрая перезарядка активирована!'), x: 350, y: 250, t: 2000}));							break;						}					}					else if(msg.side == avatars[1].sideName){						if(avatars[0].oppId == 'computer'){							avatars[1].per[msg.typeW] = Date.now();							avatars[1].tper[msg.typeW] = Date.now()+msg.per+100;						}						if(weapons.weaponsNI[msg.typeW]){							weapons_1.push(new Rocket(msg,avatars[0].x,avatars[0].y));						}						else if(msg.typeW == 'I'){							lasers.push(new Effect({type: msg.typeW, per: msg.per, koef: avatars[1].koef, side: 1}));						}						switch(msg.typeW){							case 'I':								avatars[1].life = msg.life;								particles.push(new Effect({type: 'message', text: ('Соперник применил аптечку'), x: 350, y: 350, t: 2000}));							break;							case 'J':								particles.push(new Effect({type: 'message', text: ('Соперник активировал щит!'), x: 350, y: 350, t: 2000}));							break;							case 'L':								particles.push(new Effect({type: 'message', text: ('Соперник телепортировался!'), x: 350, y: 350, t: 2000}));							break;							case 'M':								particles.push(new Effect({type: 'message', text: ('Соперник активировал генератор невидимости!'), x: 350, y: 350, t: 2000}));								avatars[0].debaff.M.per = Date.now();								avatars[0].debaff.M.tper = Date.now()+msg.per;								avatars[1].opacity = 0;							break;							case 'N':								particles.push(new Effect({type: 'message', text: ('Соперник активировал отражатель!'), x: 350, y: 350, t: 2000}));							break;							case 'O':								particles.push(new Effect({type: 'message', text: ('Соперник активировал антинаведение!'), x: 350, y: 350, t: 2000}));							break;						}					}				break;				case 'superSpeed':					//if(msg.side == avatars[0].sideName){						//particles.push(new Effect({type: 'message', text: ('Супер-скорость активирована!'), x: 350, y: 350, t: 2000}));						//avatars[0].wSuperSpeed = msg.speed;						//avatars[0].superSpeed = Date.now()+msg.timer; //когда закончится супер скорость						//avatars[0].superSpeedT = msg.timer;					//}					//else{						//avatars[1].wSuperSpeed = msg.speed;						//avatars[1].superSpeed = Date.now()+msg.timer;						//particles.push(new Effect({type: 'message', text: ('Соперник активировал супер-скорость!'), x: 350, y: 350, t: 2000}));					//}				break;				case 'bonus':					//if(avatars[0].oppId != 'computer'){						bonuses.push({typeB: msg.typeB, element: document.createElement('img'), x: msg.x, y: msg.y});						bonuses[bonuses.length-1].element.style.left = msg.x-10;						bonuses[bonuses.length-1].element.style.top = msg.y-10;						bonuses[bonuses.length-1].element.src = 'images/rockets/'+msg.typeB+'.png';						document.getElementById('bonuses').appendChild(bonuses[bonuses.length-1].element);					//}				break;				case 'bonusLoose':					if(msg.typeB == 'apteka'){						avatars[1].life += 10;						if(avatars[1].life >= 100) avatars[1].life = 100;					}					if(bonuses[msg.i].element) document.getElementById('bonuses').removeChild(bonuses[msg.i].element);					bonuses.splice(msg.i, 1);				break;				case 'bonusOk':					avatars[0].rating = msg.rating; 					avatars[0].stars = msg.stars;					avatars[0].life = msg.life;					avatars[0].resources = msg.resources;					//$('#life2 span').html(msg.life);					avatars[0].setLife();					var mes = '';					switch(msg.typeB){						case 'star':							mes = '+ 1 звезда!';						break;						case 'rating':							mes = '+ 20 рейтинга!';						break;						case 'apteka':							mes = '+ 10 HP!';						break;						case 'metall':							mes = '+1 металл';						break;						case 'silicon':							mes = '+1 кремний';						break;						case 'trotill':							mes = '+1 тротилл';						break;						case 'diamonds':							mes = '+1 алмаз';						break;					}					particles.push(new Effect({type: 'message', text: mes, x: 350, y: 300, t: 2000}));									break;				case 'regen':					avatars[0].life = msg.life;					//$('#life2 span').html(msg.life);					avatars[0].setLife();				break;				case 'regenOpp':					avatars[1].life = msg.life;				break;				case 'hit':					msg.damageCam = msg.damage >= 5 ? 5 : msg.damage;					if(msg.damageCam >= 2){						avatars[0].camX = avatars[0].rand(-msg.damageCam*5,msg.damageCam*5);						avatars[0].camY = avatars[0].rand(-msg.damageCam*5,msg.damageCam*5);						avatars[0].cam = msg.damageCam*100;						avatars[0].camD = 16;						}					avatars[0].life = msg.life;					if(avatars[0].life <= 0) avatars[0].life = 0;					if(avatars[0].life > 100) avatars[0].life = 100;					//$('#life2 span').html(msg.life);					avatars[0].setLife();					if(msg.damage <= 0){						particles.push(new Effect({type: 'message', text: ('ПРОМАХ!'), x: avatars[0].x, y: avatars[0].y, t: 1000}));					}					else{ 						particles.push(new Effect({type: 'message', text: ('-'+(Math.round(msg.damage))), x: avatars[0].x, y: avatars[0].y, t: 1000}));					}					switch(msg.typeW){						case 'C':							avatars[0].ra -= msg.damage*3*avatars[1].koef;						break;						case 'E':							avatars[0].debaff.E.per = Date.now();							avatars[0].debaff.E.tper = Date.now()+(msg.damage*500);							particles.push(new Effect({type: 'message', text: ('Управление заблокировано!'), x: 350, y: 350, t: 2000}));						break;					}					particles.push(new Effect({type: msg.typeW, x: avatars[0].x, y: avatars[0].y, side: 0, damage: msg.damage}));				break;				case 'pop':					msg.damageCam = msg.damage >= 5 ? 5 : msg.damage;					if(msg.damageCam >= 2){						avatars[0].camX = avatars[0].rand(-msg.damageCam*2,msg.damageCam*2);						avatars[0].camY = avatars[0].rand(-msg.damageCam*2,msg.damageCam*2);						avatars[0].cam = msg.damageCam*70;						avatars[0].camD = 16;						}					avatars[1].life = msg.life; 					if(avatars[1].life <= 0) avatars[1].life = 0;					if(avatars[1].life > 100) avatars[1].life = 100;					if(weapons_0.length > msg.i){						weapons_0.splice(msg.i,1);					}					if(msg.damage <= 0){						particles.push(new Effect({type: 'message', text: ('ПРОМАХ!'), x: avatars[1].x, y: avatars[1].y, t: 1000}));					}					else{						particles.push(new Effect({type: 'message', text: ('-'+(Math.round(msg.damage))), x: avatars[1].x, y: avatars[1].y, t: 1000}));					}					switch(msg.typeW){						case 'C':							avatars[1].ra += msg.damage*3*avatars[1].koef;						break;						case 'E':							particles.push(new Effect({type: 'message', text: ('Прямое попадание! Управление соперника заблокировано!'), x: 300, y: 220, t: 2000}));						break;					}					if(msg.typeW == 'F') msg.damage = 1;					particles.push(new Effect({type: msg.typeW, x: avatars[1].x, y: avatars[1].y, side: 1, damage: msg.damage}));				break; 				case 'medails':					weapons.messages = [];					avatars[0].quests = msg.quests;					for(var i = 0; i < msg.one.length; i++){						switch(msg.one[i]){							case 0:								weapons.messages.push('Ты сыграл 10 игр, прими медаль и награду - 5 осколочных ракет!');							break;							case 1:								weapons.messages.push('Ты сыграл 50 игр, прими медаль и награду - 50 ударных и 50 осколочных ракет!');							break;							case 2:								weapons.messages.push('Ты сыграл 100 игр, прими медаль и награду - 10 алмазов!');							break;							case 3:								weapons.messages.push('Ты сыграл 500 игр, прими медаль и награду - 30 металла, 30 кремния, 30 тротилла и 15 алмазов!');							break;							case 4:								weapons.messages.push('Ты сыграл 1000 игр, прими медаль и награду - 50 алмазов и 100 звёзд!');							break;							case 5:								weapons.messages.push('Ты одержал победу 10 раз, прими медаль и награду - теперь за каждую победу ты будешь получать на 5% больше рейтинга!');							break;							case 6:								weapons.messages.push('Ты одержал победу 50 раз, прими медаль и награду - теперь за каждую победу ты будешь получать на 10% больше рейтинга!');							break;							case 7:								weapons.messages.push('Ты одержал победу 100 раз, прими медаль и награду - теперь за каждую победу ты будешь получать на 20% больше рейтинга!');							break;							case 8:								weapons.messages.push('Ты одержал победу 500 раз, прими медаль и награду - теперь за каждую победу ты будешь получать на 35% больше рейтинга!');							break;							case 9:								weapons.messages.push('Ты одержал победу 1000 раз, прими медаль и награду - теперь за каждую победу ты будешь получать на 50% больше рейтинга!');							break;							case 16:								weapons.messages.push('Ты заходил в игру 5 дней подряд, прими медаль и награду - теперь за каждую победу ты будешь получать на 3% больше рейтинга!');							break;							case 10:								weapons.messages.push('Ты добил соперника пулемётом, прими медаль и награду - 100 патронов к пулемёту!');							break;							case 11:								weapons.messages.push('Ты купил все самолёты, прими медаль и награду - 100 алмазов!');							break;							case 12:								weapons.messages.push('Ты наворовал 500 единиц топлива, прими медаль и награду - 50 металла, 50 кремния, 50 тротилла и 30 алмазов!');							break;							case 13:								weapons.messages.push('Ты победил с 1 жизнью, прими медаль и награду - 20 щитов и 20 аптечек!');							break;							case 14:								weapons.messages.push('Ты набрал 10000 рейтинга, прими медаль и награду - 10 алмазов!');							break;							case 15:								weapons.messages.push('Ты набрал 100000 рейтинга, прими медаль и награду - 40 металла, 40 кремния, 40 тротилла и 100 звёзд!');							break;						}						weapons.messages[i] += '<br/><div class = "qq'+(msg.one[i]+1)+' medal"></div>';					}					for(var i = 0; i < weapons.all.length; i++){						avatars[0].weapons[weapons.all[i]] = msg.weapons[i]-=0;						$('.weapons .'+weapons.all[i]+' .val span').html(avatars[0].weapons[weapons.all[i]]);					}					if(msg.dayBonus > 0){						weapons.messages.unshift('<div class = "dayBonus"></div>Ты играешь '+msg.dayBonus+' день подряд и заслуживаешь бонус - '+(msg.dayBonus*3)+' звёзд!');						avatars[0].stars += (msg.dayBonus*3);					}					if(msg.leftRating && msg.leftStars){						avatars[0].rating = msg.leftRating;						avatars[0].stars = msg.leftStars;						$('#rating span, #inTurn .rating').html(avatars[0].rating);						$('#stars span').html(avatars[0].stars);					}					else if(msg.leftRating && !msg.leftStars){						avatars[0].rating = msg.leftRating;						$('#rating span, #inTurn .rating').html(avatars[0].rating);					}					fillQuests(avatars[0].quests);					msg.ruletka = 0;					if(msg.turnirs.r >= 1 && msg.turnirs.r <= 10){						msg.one.push(20);						weapons.wallMessages[20] = 'Я занял '+msg.turnirs.r+' место в общем рейтинге игроков за неделю! Слабо со мной потягаться?';						var nagrada = '';						if(msg.turnirs.r <= 3){							nagrada = '<span class = "nagrad st">'+turnir.rating.win[msg.turnirs.r-1][0]+'<div></div></span></br><span class = "nagrad me">'+turnir.rating.win[msg.turnirs.r-1][1]+'<div></div></span></br><span class = "nagrad si">'+turnir.rating.win[msg.turnirs.r-1][2]+'<div></div></span></br><span class = "nagrad tr">'+turnir.rating.win[msg.turnirs.r-1][3]+'<div></div></span></br><span class = "nagrad di">'+turnir.rating.win[msg.turnirs.r-1][4]+'<div></div></span></br>';						}						else{							nagrada = '<span class = "nagrad st">'+turnir.rating.win[3][0]+'<div></div></span></br><span class = "nagrad me">'+turnir.rating.win[3][1]+'<div></div></span></br><span class = "nagrad si">'+turnir.rating.win[3][2]+'<div></div></span></br><span class = "nagrad tr">'+turnir.rating.win[3][3]+'<div></div></span></br><span class = "nagrad di">'+turnir.rating.win[3][4]+'<div></div></span></br>';						}						weapons.messages.push('Ты завоевал '+msg.turnirs.r+' место в общем рейтинге игроков!<br/>Твоя награда:<br/>'+nagrada);					}					if(msg.turnirs.w7 >= 1 && msg.turnirs.w7 <= 10){						msg.one.push(21);						weapons.wallMessages[21] = 'Я занял '+msg.turnirs.w7+' место в недельном турнире побед! Слабо со мной потягаться?';						var nagrada = '';						if(msg.turnirs.w7 <= 3){							nagrada = '<span class = "nagrad st">'+turnir.win7.win[msg.turnirs.w7-1][0]+'<div></div></span></br><span class = "nagrad me">'+turnir.win7.win[msg.turnirs.w7-1][1]+'<div></div></span></br><span class = "nagrad si">'+turnir.win7.win[msg.turnirs.w7-1][2]+'<div></div></span></br><span class = "nagrad tr">'+turnir.win7.win[msg.turnirs.w7-1][3]+'<div></div></span></br><span class = "nagrad di">'+turnir.win7.win[msg.turnirs.w7-1][4]+'<div></div></span></br>';						}						else{							nagrada = '<span class = "nagrad st">'+turnir.win7.win[3][0]+'<div></div></span></br><span class = "nagrad me">'+turnir.win7.win[3][1]+'<div></div></span></br><span class = "nagrad si">'+turnir.win7.win[3][2]+'<div></div></span></br><span class = "nagrad tr">'+turnir.win7.win[3][3]+'<div></div></span></br><span class = "nagrad di">'+turnir.win7.win[3][4]+'<div></div></span></br>';						}						weapons.messages.push('Ты завоевал '+msg.turnirs.w7+' место в недельном турнире побед!<br/>Твоя награда:<br/>'+nagrada);					}					if(msg.turnirs.w30 >= 1 && msg.turnirs.w30 <= 10){						msg.one.push(22);						weapons.wallMessages[22] = 'Я занял '+msg.turnirs.w30+' место в месячном турнире побед! Слабо со мной потягаться?';						var nagrada = '';						if(msg.turnirs.w30 <= 3){							nagrada = '<span class = "nagrad st">'+turnir.win30.win[msg.turnirs.w30-1][0]+'<div></div></span></br><span class = "nagrad me">'+turnir.win30.win[msg.turnirs.w30-1][1]+'<div></div></span></br><span class = "nagrad si">'+turnir.win30.win[msg.turnirs.w30-1][2]+'<div></div></span></br><span class = "nagrad tr">'+turnir.win30.win[msg.turnirs.w30-1][3]+'<div></div></span></br><span class = "nagrad di">'+turnir.win30.win[msg.turnirs.w30-1][4]+'<div></div></span></br>';						}						else{							nagrada = '<span class = "nagrad st">'+turnir.win30.win[3][0]+'<div></div></span></br><span class = "nagrad me">'+turnir.win30.win[3][1]+'<div></div></span></br><span class = "nagrad si">'+turnir.win30.win[3][2]+'<div></div></span></br><span class = "nagrad tr">'+turnir.win30.win[3][3]+'<div></div></span></br><span class = "nagrad di">'+turnir.win30.win[3][4]+'<div></div></span></br>';						}						weapons.messages.push('Ты завоевал '+msg.turnirs.w30+' место в месячном турнире побед!<br/>Твоя награда:<br/>'+nagrada);					}					if(msg.ruletka != 0){						weapons.helpForRul = {one: msg.one, dayBonus: msg.dayBonus};						message('one', '1 раз в день ты можешь крутить колесо удачи, и выиграть ценный бонус!', 'Ну давай!');						$('#one .but, #one .close').click(function(){							message('rul');							$('.start_rul').click(function(){								$(this).css('opacity', 0);								$('img.shape').css('-webkit-transform', 'rotate('+(2880+(22.5*msg.ruletka))+'deg)');								$('.surprize').html(weapons.rul_text[msg.ruletka]).css('top', 185-$('.surprize').height()/2);								setTimeout(function(){									$('.start_rul').css('display', 'none');									$('.surprize').css('opacity', '1');									setTimeout(function(){										message();										mesQ(avatars[0].id, weapons.helpForRul.one, weapons.helpForRul.dayBonus, ((avatars[0].rating == 1000 && avatars[0].stars == 10 && avatars[0].gas == 100) ? true : false));										//$('.surprize').css('opacity', '0');										//TODO									}, 5000);								}, 9000);							});						});					}					else{						mesQ(avatars[0].id, msg.one, msg.dayBonus, ((avatars[0].rating == 1000 && avatars[0].stars == 10 && avatars[0].gas == 100) ? true : false));					}					avatars[0].resources = msg.resources;					avatars[0].stars = msg.stars;					$('#rating span').html(avatars[0].rating+'<b title = "Процент рейтинга, добавляемый за каждую победу"> +'+msg.rating+'%</b>');					$('#stars span').html(avatars[0].stars);					avatars[0].prices();					avatars[0].setTehno(avatars[0].tehnoNum,avatars[0].tehno,avatars[0].resources[3],avatars[0].stars);					avatars[0].setResources(avatars[0].resources);				break;				case 'ping':					if(avatars[0]){						msg.rnd = Math.round(Math.random()*(300 - 100) + 100);						setTimeout(function(){sock.send($.toJSON({type: 'pong', pingTime: msg.pingTime, rnd: msg.rnd}));}, msg.rnd);					}				break;				case 'pingDisconnect':					try{						avatars[0].pingDisconnect = true;						message('one', 'Сервер обнаружил нестабильное интернет-соединение. Попробуйте войти позже.', 'ОК');						$('#one .but').attr({'href': 'http://vk.com/aviamyaso_online', 'target': '_parent'});						$('#one close').click(function(){$('#one .but').click()});					} catch(er) {}				break;				case 'gasFriends':					$('#gas span').html(msg.gas);					if(msg.all == 'gasOut'){						clearInterval(avatars[0].getGas);						message();						message('one', 'У тебя полный бак!', 'ОК');						$('#one .but, #one .close').click(function(){message()});					}					else if(msg.all == 'gasOutEnd'){						clearInterval(avatars[0].getGas);						message();						message('one', 'Заправка завершена! Всего слито '+avatars[0].gasPlus+' топлива.', 'ОК');						$('#one .but, #one .close').click(function(){message()});					}					else if(msg.all == 'drain'){						clearInterval(avatars[0].getGas);						message();						message('one', 'Ты уже недавно сливал топливо у друзей. Попробуй позже, или пригласи еще друзей!', 'Пригласить друзей');						$('#one .but').click(function(){message();if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()}; VK.callMethod('showInviteBox');});						$('#one .close').click(function(){message()});					}					else if(msg.gasPlus > 0){						avatars[0].gasPlus += msg.gasPlus;						message('preloader', 'Сливаем топливо у друзей...<br/>Слито: '+avatars[0].gasPlus);					}					else if(msg.gasPlus == 0){						clearInterval(avatars[0].getGas);						message();						message('one', 'Ты слил '+avatars[0].gasPlus+' топлива у друзей.<br/>Слить топливо теперь можно через пол часа, или пригласив новых друзей', 'Пригласить друзей');						$('#one .but').click(function(){message();if(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement){toggleFullScreen()}; VK.callMethod('showInviteBox');});						$('#one .close').click(function(){message()});					}				break;				case 'online':					$('#info .online span').html('<b title = "Всего в игре">'+msg.online+'</b> / <b title = "Войн в данный момент">'+msg.wars+'</b>');				break;				case 'waitTurnirs':					initTurnirs = true;					message('one', 'Сервер запускается...попробуйте войти в игру через пару минут.', 'ОК');					$('#one .but').attr({'href': 'http://vk.com/aviamyaso_online', 'target': '_parent'});				break;			}		});		sock.on('disconnect', function (msg) {			if(!initTurnirs){				try{					if(!avatars[0].pingDisconnect){						message('one', 'Потеряно соединение с сервером. Попробуйте войти позже.', 'ОК');						$('#one .but').attr({'href': 'http://vk.com/aviamyaso_online', 'target': '_parent'});					}				} catch(er) {					message('one', 'Потеряно соединение с сервером. Попробуйте войти позже.', 'ОК');					$('#one .but').attr({'href': 'http://vk.com/aviamyaso_online', 'target': '_parent'});				}			}		});	});},'5.40')})